

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 25 10:03:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.30
    53                           ; Generated 15/09/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F15244 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011B                     	;# 
   121  011C                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  011F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  018E                     	;# 
   128  018F                     	;# 
   129  0190                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  020C                     	;# 
   133  020D                     	;# 
   134  020E                     	;# 
   135  020E                     	;# 
   136  020F                     	;# 
   137  020F                     	;# 
   138  0210                     	;# 
   139  0210                     	;# 
   140  0211                     	;# 
   141  0211                     	;# 
   142  028C                     	;# 
   143  028C                     	;# 
   144  028D                     	;# 
   145  028D                     	;# 
   146  028E                     	;# 
   147  028F                     	;# 
   148  0290                     	;# 
   149  0291                     	;# 
   150  030C                     	;# 
   151  030C                     	;# 
   152  030D                     	;# 
   153  030E                     	;# 
   154  030F                     	;# 
   155  0310                     	;# 
   156  0310                     	;# 
   157  0311                     	;# 
   158  0312                     	;# 
   159  0313                     	;# 
   160  0314                     	;# 
   161  0314                     	;# 
   162  0315                     	;# 
   163  0316                     	;# 
   164  0318                     	;# 
   165  0318                     	;# 
   166  0319                     	;# 
   167  031A                     	;# 
   168  059C                     	;# 
   169  059C                     	;# 
   170  059D                     	;# 
   171  059D                     	;# 
   172  059E                     	;# 
   173  059F                     	;# 
   174  070C                     	;# 
   175  070D                     	;# 
   176  070E                     	;# 
   177  0716                     	;# 
   178  0717                     	;# 
   179  0718                     	;# 
   180  080C                     	;# 
   181  0811                     	;# 
   182  0813                     	;# 
   183  0814                     	;# 
   184  081A                     	;# 
   185  081A                     	;# 
   186  081B                     	;# 
   187  081C                     	;# 
   188  081C                     	;# 
   189  081D                     	;# 
   190  081E                     	;# 
   191  081F                     	;# 
   192  088E                     	;# 
   193  0890                     	;# 
   194  0891                     	;# 
   195  0892                     	;# 
   196  0893                     	;# 
   197  090C                     	;# 
   198  1E8F                     	;# 
   199  1E90                     	;# 
   200  1E91                     	;# 
   201  1E92                     	;# 
   202  1E93                     	;# 
   203  1E9C                     	;# 
   204  1EA1                     	;# 
   205  1EA2                     	;# 
   206  1EC3                     	;# 
   207  1EC5                     	;# 
   208  1EC6                     	;# 
   209  1EC7                     	;# 
   210  1ECB                     	;# 
   211  1ECB                     	;# 
   212  1ECB                     	;# 
   213  1ECC                     	;# 
   214  1ECC                     	;# 
   215  1ECC                     	;# 
   216  1F10                     	;# 
   217  1F11                     	;# 
   218  1F12                     	;# 
   219  1F14                     	;# 
   220  1F15                     	;# 
   221  1F1C                     	;# 
   222  1F1D                     	;# 
   223  1F1E                     	;# 
   224  1F1F                     	;# 
   225  1F20                     	;# 
   226  1F21                     	;# 
   227  1F22                     	;# 
   228  1F23                     	;# 
   229  1F24                     	;# 
   230  1F25                     	;# 
   231  1F26                     	;# 
   232  1F27                     	;# 
   233  1F38                     	;# 
   234  1F39                     	;# 
   235  1F3A                     	;# 
   236  1F3B                     	;# 
   237  1F3C                     	;# 
   238  1F3D                     	;# 
   239  1F3E                     	;# 
   240  1F3F                     	;# 
   241  1F43                     	;# 
   242  1F44                     	;# 
   243  1F45                     	;# 
   244  1F46                     	;# 
   245  1F47                     	;# 
   246  1F48                     	;# 
   247  1F49                     	;# 
   248  1F4A                     	;# 
   249  1F4E                     	;# 
   250  1F4F                     	;# 
   251  1F50                     	;# 
   252  1F51                     	;# 
   253  1F52                     	;# 
   254  1F53                     	;# 
   255  1F54                     	;# 
   256  1F55                     	;# 
   257  1FE4                     	;# 
   258  1FE5                     	;# 
   259  1FE6                     	;# 
   260  1FE7                     	;# 
   261  1FE8                     	;# 
   262  1FE8                     	;# 
   263  1FE9                     	;# 
   264  1FEA                     	;# 
   265  1FEB                     	;# 
   266  1FED                     	;# 
   267  1FEE                     	;# 
   268  1FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  0012                     	;# 
   285  0013                     	;# 
   286  0014                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  0119                     	;# 
   300  011A                     	;# 
   301  011B                     	;# 
   302  011B                     	;# 
   303  011C                     	;# 
   304  011D                     	;# 
   305  011E                     	;# 
   306  011F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  018E                     	;# 
   310  018F                     	;# 
   311  0190                     	;# 
   312  0191                     	;# 
   313  0192                     	;# 
   314  020C                     	;# 
   315  020D                     	;# 
   316  020E                     	;# 
   317  020E                     	;# 
   318  020F                     	;# 
   319  020F                     	;# 
   320  0210                     	;# 
   321  0210                     	;# 
   322  0211                     	;# 
   323  0211                     	;# 
   324  028C                     	;# 
   325  028C                     	;# 
   326  028D                     	;# 
   327  028D                     	;# 
   328  028E                     	;# 
   329  028F                     	;# 
   330  0290                     	;# 
   331  0291                     	;# 
   332  030C                     	;# 
   333  030C                     	;# 
   334  030D                     	;# 
   335  030E                     	;# 
   336  030F                     	;# 
   337  0310                     	;# 
   338  0310                     	;# 
   339  0311                     	;# 
   340  0312                     	;# 
   341  0313                     	;# 
   342  0314                     	;# 
   343  0314                     	;# 
   344  0315                     	;# 
   345  0316                     	;# 
   346  0318                     	;# 
   347  0318                     	;# 
   348  0319                     	;# 
   349  031A                     	;# 
   350  059C                     	;# 
   351  059C                     	;# 
   352  059D                     	;# 
   353  059D                     	;# 
   354  059E                     	;# 
   355  059F                     	;# 
   356  070C                     	;# 
   357  070D                     	;# 
   358  070E                     	;# 
   359  0716                     	;# 
   360  0717                     	;# 
   361  0718                     	;# 
   362  080C                     	;# 
   363  0811                     	;# 
   364  0813                     	;# 
   365  0814                     	;# 
   366  081A                     	;# 
   367  081A                     	;# 
   368  081B                     	;# 
   369  081C                     	;# 
   370  081C                     	;# 
   371  081D                     	;# 
   372  081E                     	;# 
   373  081F                     	;# 
   374  088E                     	;# 
   375  0890                     	;# 
   376  0891                     	;# 
   377  0892                     	;# 
   378  0893                     	;# 
   379  090C                     	;# 
   380  1E8F                     	;# 
   381  1E90                     	;# 
   382  1E91                     	;# 
   383  1E92                     	;# 
   384  1E93                     	;# 
   385  1E9C                     	;# 
   386  1EA1                     	;# 
   387  1EA2                     	;# 
   388  1EC3                     	;# 
   389  1EC5                     	;# 
   390  1EC6                     	;# 
   391  1EC7                     	;# 
   392  1ECB                     	;# 
   393  1ECB                     	;# 
   394  1ECB                     	;# 
   395  1ECC                     	;# 
   396  1ECC                     	;# 
   397  1ECC                     	;# 
   398  1F10                     	;# 
   399  1F11                     	;# 
   400  1F12                     	;# 
   401  1F14                     	;# 
   402  1F15                     	;# 
   403  1F1C                     	;# 
   404  1F1D                     	;# 
   405  1F1E                     	;# 
   406  1F1F                     	;# 
   407  1F20                     	;# 
   408  1F21                     	;# 
   409  1F22                     	;# 
   410  1F23                     	;# 
   411  1F24                     	;# 
   412  1F25                     	;# 
   413  1F26                     	;# 
   414  1F27                     	;# 
   415  1F38                     	;# 
   416  1F39                     	;# 
   417  1F3A                     	;# 
   418  1F3B                     	;# 
   419  1F3C                     	;# 
   420  1F3D                     	;# 
   421  1F3E                     	;# 
   422  1F3F                     	;# 
   423  1F43                     	;# 
   424  1F44                     	;# 
   425  1F45                     	;# 
   426  1F46                     	;# 
   427  1F47                     	;# 
   428  1F48                     	;# 
   429  1F49                     	;# 
   430  1F4A                     	;# 
   431  1F4E                     	;# 
   432  1F4F                     	;# 
   433  1F50                     	;# 
   434  1F51                     	;# 
   435  1F52                     	;# 
   436  1F53                     	;# 
   437  1F54                     	;# 
   438  1F55                     	;# 
   439  1FE4                     	;# 
   440  1FE5                     	;# 
   441  1FE6                     	;# 
   442  1FE7                     	;# 
   443  1FE8                     	;# 
   444  1FE8                     	;# 
   445  1FE9                     	;# 
   446  1FEA                     	;# 
   447  1FEB                     	;# 
   448  1FED                     	;# 
   449  1FEE                     	;# 
   450  1FEF                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  0012                     	;# 
   467  0013                     	;# 
   468  0014                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  009A                     	;# 
   473  009B                     	;# 
   474  009B                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  0119                     	;# 
   482  011A                     	;# 
   483  011B                     	;# 
   484  011B                     	;# 
   485  011C                     	;# 
   486  011D                     	;# 
   487  011E                     	;# 
   488  011F                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  018E                     	;# 
   492  018F                     	;# 
   493  0190                     	;# 
   494  0191                     	;# 
   495  0192                     	;# 
   496  020C                     	;# 
   497  020D                     	;# 
   498  020E                     	;# 
   499  020E                     	;# 
   500  020F                     	;# 
   501  020F                     	;# 
   502  0210                     	;# 
   503  0210                     	;# 
   504  0211                     	;# 
   505  0211                     	;# 
   506  028C                     	;# 
   507  028C                     	;# 
   508  028D                     	;# 
   509  028D                     	;# 
   510  028E                     	;# 
   511  028F                     	;# 
   512  0290                     	;# 
   513  0291                     	;# 
   514  030C                     	;# 
   515  030C                     	;# 
   516  030D                     	;# 
   517  030E                     	;# 
   518  030F                     	;# 
   519  0310                     	;# 
   520  0310                     	;# 
   521  0311                     	;# 
   522  0312                     	;# 
   523  0313                     	;# 
   524  0314                     	;# 
   525  0314                     	;# 
   526  0315                     	;# 
   527  0316                     	;# 
   528  0318                     	;# 
   529  0318                     	;# 
   530  0319                     	;# 
   531  031A                     	;# 
   532  059C                     	;# 
   533  059C                     	;# 
   534  059D                     	;# 
   535  059D                     	;# 
   536  059E                     	;# 
   537  059F                     	;# 
   538  070C                     	;# 
   539  070D                     	;# 
   540  070E                     	;# 
   541  0716                     	;# 
   542  0717                     	;# 
   543  0718                     	;# 
   544  080C                     	;# 
   545  0811                     	;# 
   546  0813                     	;# 
   547  0814                     	;# 
   548  081A                     	;# 
   549  081A                     	;# 
   550  081B                     	;# 
   551  081C                     	;# 
   552  081C                     	;# 
   553  081D                     	;# 
   554  081E                     	;# 
   555  081F                     	;# 
   556  088E                     	;# 
   557  0890                     	;# 
   558  0891                     	;# 
   559  0892                     	;# 
   560  0893                     	;# 
   561  090C                     	;# 
   562  1E8F                     	;# 
   563  1E90                     	;# 
   564  1E91                     	;# 
   565  1E92                     	;# 
   566  1E93                     	;# 
   567  1E9C                     	;# 
   568  1EA1                     	;# 
   569  1EA2                     	;# 
   570  1EC3                     	;# 
   571  1EC5                     	;# 
   572  1EC6                     	;# 
   573  1EC7                     	;# 
   574  1ECB                     	;# 
   575  1ECB                     	;# 
   576  1ECB                     	;# 
   577  1ECC                     	;# 
   578  1ECC                     	;# 
   579  1ECC                     	;# 
   580  1F10                     	;# 
   581  1F11                     	;# 
   582  1F12                     	;# 
   583  1F14                     	;# 
   584  1F15                     	;# 
   585  1F1C                     	;# 
   586  1F1D                     	;# 
   587  1F1E                     	;# 
   588  1F1F                     	;# 
   589  1F20                     	;# 
   590  1F21                     	;# 
   591  1F22                     	;# 
   592  1F23                     	;# 
   593  1F24                     	;# 
   594  1F25                     	;# 
   595  1F26                     	;# 
   596  1F27                     	;# 
   597  1F38                     	;# 
   598  1F39                     	;# 
   599  1F3A                     	;# 
   600  1F3B                     	;# 
   601  1F3C                     	;# 
   602  1F3D                     	;# 
   603  1F3E                     	;# 
   604  1F3F                     	;# 
   605  1F43                     	;# 
   606  1F44                     	;# 
   607  1F45                     	;# 
   608  1F46                     	;# 
   609  1F47                     	;# 
   610  1F48                     	;# 
   611  1F49                     	;# 
   612  1F4A                     	;# 
   613  1F4E                     	;# 
   614  1F4F                     	;# 
   615  1F50                     	;# 
   616  1F51                     	;# 
   617  1F52                     	;# 
   618  1F53                     	;# 
   619  1F54                     	;# 
   620  1F55                     	;# 
   621  1FE4                     	;# 
   622  1FE5                     	;# 
   623  1FE6                     	;# 
   624  1FE7                     	;# 
   625  1FE8                     	;# 
   626  1FE8                     	;# 
   627  1FE9                     	;# 
   628  1FEA                     	;# 
   629  1FEB                     	;# 
   630  1FED                     	;# 
   631  1FEE                     	;# 
   632  1FEF                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0008                     	;# 
   642  0009                     	;# 
   643  000A                     	;# 
   644  000B                     	;# 
   645  000C                     	;# 
   646  000D                     	;# 
   647  000E                     	;# 
   648  0012                     	;# 
   649  0013                     	;# 
   650  0014                     	;# 
   651  0018                     	;# 
   652  0019                     	;# 
   653  001A                     	;# 
   654  009A                     	;# 
   655  009B                     	;# 
   656  009B                     	;# 
   657  009C                     	;# 
   658  009D                     	;# 
   659  009E                     	;# 
   660  009F                     	;# 
   661  010C                     	;# 
   662  010D                     	;# 
   663  0119                     	;# 
   664  011A                     	;# 
   665  011B                     	;# 
   666  011B                     	;# 
   667  011C                     	;# 
   668  011D                     	;# 
   669  011E                     	;# 
   670  011F                     	;# 
   671  018C                     	;# 
   672  018D                     	;# 
   673  018E                     	;# 
   674  018F                     	;# 
   675  0190                     	;# 
   676  0191                     	;# 
   677  0192                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020E                     	;# 
   682  020F                     	;# 
   683  020F                     	;# 
   684  0210                     	;# 
   685  0210                     	;# 
   686  0211                     	;# 
   687  0211                     	;# 
   688  028C                     	;# 
   689  028C                     	;# 
   690  028D                     	;# 
   691  028D                     	;# 
   692  028E                     	;# 
   693  028F                     	;# 
   694  0290                     	;# 
   695  0291                     	;# 
   696  030C                     	;# 
   697  030C                     	;# 
   698  030D                     	;# 
   699  030E                     	;# 
   700  030F                     	;# 
   701  0310                     	;# 
   702  0310                     	;# 
   703  0311                     	;# 
   704  0312                     	;# 
   705  0313                     	;# 
   706  0314                     	;# 
   707  0314                     	;# 
   708  0315                     	;# 
   709  0316                     	;# 
   710  0318                     	;# 
   711  0318                     	;# 
   712  0319                     	;# 
   713  031A                     	;# 
   714  059C                     	;# 
   715  059C                     	;# 
   716  059D                     	;# 
   717  059D                     	;# 
   718  059E                     	;# 
   719  059F                     	;# 
   720  070C                     	;# 
   721  070D                     	;# 
   722  070E                     	;# 
   723  0716                     	;# 
   724  0717                     	;# 
   725  0718                     	;# 
   726  080C                     	;# 
   727  0811                     	;# 
   728  0813                     	;# 
   729  0814                     	;# 
   730  081A                     	;# 
   731  081A                     	;# 
   732  081B                     	;# 
   733  081C                     	;# 
   734  081C                     	;# 
   735  081D                     	;# 
   736  081E                     	;# 
   737  081F                     	;# 
   738  088E                     	;# 
   739  0890                     	;# 
   740  0891                     	;# 
   741  0892                     	;# 
   742  0893                     	;# 
   743  090C                     	;# 
   744  1E8F                     	;# 
   745  1E90                     	;# 
   746  1E91                     	;# 
   747  1E92                     	;# 
   748  1E93                     	;# 
   749  1E9C                     	;# 
   750  1EA1                     	;# 
   751  1EA2                     	;# 
   752  1EC3                     	;# 
   753  1EC5                     	;# 
   754  1EC6                     	;# 
   755  1EC7                     	;# 
   756  1ECB                     	;# 
   757  1ECB                     	;# 
   758  1ECB                     	;# 
   759  1ECC                     	;# 
   760  1ECC                     	;# 
   761  1ECC                     	;# 
   762  1F10                     	;# 
   763  1F11                     	;# 
   764  1F12                     	;# 
   765  1F14                     	;# 
   766  1F15                     	;# 
   767  1F1C                     	;# 
   768  1F1D                     	;# 
   769  1F1E                     	;# 
   770  1F1F                     	;# 
   771  1F20                     	;# 
   772  1F21                     	;# 
   773  1F22                     	;# 
   774  1F23                     	;# 
   775  1F24                     	;# 
   776  1F25                     	;# 
   777  1F26                     	;# 
   778  1F27                     	;# 
   779  1F38                     	;# 
   780  1F39                     	;# 
   781  1F3A                     	;# 
   782  1F3B                     	;# 
   783  1F3C                     	;# 
   784  1F3D                     	;# 
   785  1F3E                     	;# 
   786  1F3F                     	;# 
   787  1F43                     	;# 
   788  1F44                     	;# 
   789  1F45                     	;# 
   790  1F46                     	;# 
   791  1F47                     	;# 
   792  1F48                     	;# 
   793  1F49                     	;# 
   794  1F4A                     	;# 
   795  1F4E                     	;# 
   796  1F4F                     	;# 
   797  1F50                     	;# 
   798  1F51                     	;# 
   799  1F52                     	;# 
   800  1F53                     	;# 
   801  1F54                     	;# 
   802  1F55                     	;# 
   803  1FE4                     	;# 
   804  1FE5                     	;# 
   805  1FE6                     	;# 
   806  1FE7                     	;# 
   807  1FE8                     	;# 
   808  1FE8                     	;# 
   809  1FE9                     	;# 
   810  1FEA                     	;# 
   811  1FEB                     	;# 
   812  1FED                     	;# 
   813  1FEE                     	;# 
   814  1FEF                     	;# 
   815  0000                     	;# 
   816  0001                     	;# 
   817  0002                     	;# 
   818  0003                     	;# 
   819  0004                     	;# 
   820  0005                     	;# 
   821  0006                     	;# 
   822  0007                     	;# 
   823  0008                     	;# 
   824  0009                     	;# 
   825  000A                     	;# 
   826  000B                     	;# 
   827  000C                     	;# 
   828  000D                     	;# 
   829  000E                     	;# 
   830  0012                     	;# 
   831  0013                     	;# 
   832  0014                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  009A                     	;# 
   837  009B                     	;# 
   838  009B                     	;# 
   839  009C                     	;# 
   840  009D                     	;# 
   841  009E                     	;# 
   842  009F                     	;# 
   843  010C                     	;# 
   844  010D                     	;# 
   845  0119                     	;# 
   846  011A                     	;# 
   847  011B                     	;# 
   848  011B                     	;# 
   849  011C                     	;# 
   850  011D                     	;# 
   851  011E                     	;# 
   852  011F                     	;# 
   853  018C                     	;# 
   854  018D                     	;# 
   855  018E                     	;# 
   856  018F                     	;# 
   857  0190                     	;# 
   858  0191                     	;# 
   859  0192                     	;# 
   860  020C                     	;# 
   861  020D                     	;# 
   862  020E                     	;# 
   863  020E                     	;# 
   864  020F                     	;# 
   865  020F                     	;# 
   866  0210                     	;# 
   867  0210                     	;# 
   868  0211                     	;# 
   869  0211                     	;# 
   870  028C                     	;# 
   871  028C                     	;# 
   872  028D                     	;# 
   873  028D                     	;# 
   874  028E                     	;# 
   875  028F                     	;# 
   876  0290                     	;# 
   877  0291                     	;# 
   878  030C                     	;# 
   879  030C                     	;# 
   880  030D                     	;# 
   881  030E                     	;# 
   882  030F                     	;# 
   883  0310                     	;# 
   884  0310                     	;# 
   885  0311                     	;# 
   886  0312                     	;# 
   887  0313                     	;# 
   888  0314                     	;# 
   889  0314                     	;# 
   890  0315                     	;# 
   891  0316                     	;# 
   892  0318                     	;# 
   893  0318                     	;# 
   894  0319                     	;# 
   895  031A                     	;# 
   896  059C                     	;# 
   897  059C                     	;# 
   898  059D                     	;# 
   899  059D                     	;# 
   900  059E                     	;# 
   901  059F                     	;# 
   902  070C                     	;# 
   903  070D                     	;# 
   904  070E                     	;# 
   905  0716                     	;# 
   906  0717                     	;# 
   907  0718                     	;# 
   908  080C                     	;# 
   909  0811                     	;# 
   910  0813                     	;# 
   911  0814                     	;# 
   912  081A                     	;# 
   913  081A                     	;# 
   914  081B                     	;# 
   915  081C                     	;# 
   916  081C                     	;# 
   917  081D                     	;# 
   918  081E                     	;# 
   919  081F                     	;# 
   920  088E                     	;# 
   921  0890                     	;# 
   922  0891                     	;# 
   923  0892                     	;# 
   924  0893                     	;# 
   925  090C                     	;# 
   926  1E8F                     	;# 
   927  1E90                     	;# 
   928  1E91                     	;# 
   929  1E92                     	;# 
   930  1E93                     	;# 
   931  1E9C                     	;# 
   932  1EA1                     	;# 
   933  1EA2                     	;# 
   934  1EC3                     	;# 
   935  1EC5                     	;# 
   936  1EC6                     	;# 
   937  1EC7                     	;# 
   938  1ECB                     	;# 
   939  1ECB                     	;# 
   940  1ECB                     	;# 
   941  1ECC                     	;# 
   942  1ECC                     	;# 
   943  1ECC                     	;# 
   944  1F10                     	;# 
   945  1F11                     	;# 
   946  1F12                     	;# 
   947  1F14                     	;# 
   948  1F15                     	;# 
   949  1F1C                     	;# 
   950  1F1D                     	;# 
   951  1F1E                     	;# 
   952  1F1F                     	;# 
   953  1F20                     	;# 
   954  1F21                     	;# 
   955  1F22                     	;# 
   956  1F23                     	;# 
   957  1F24                     	;# 
   958  1F25                     	;# 
   959  1F26                     	;# 
   960  1F27                     	;# 
   961  1F38                     	;# 
   962  1F39                     	;# 
   963  1F3A                     	;# 
   964  1F3B                     	;# 
   965  1F3C                     	;# 
   966  1F3D                     	;# 
   967  1F3E                     	;# 
   968  1F3F                     	;# 
   969  1F43                     	;# 
   970  1F44                     	;# 
   971  1F45                     	;# 
   972  1F46                     	;# 
   973  1F47                     	;# 
   974  1F48                     	;# 
   975  1F49                     	;# 
   976  1F4A                     	;# 
   977  1F4E                     	;# 
   978  1F4F                     	;# 
   979  1F50                     	;# 
   980  1F51                     	;# 
   981  1F52                     	;# 
   982  1F53                     	;# 
   983  1F54                     	;# 
   984  1F55                     	;# 
   985  1FE4                     	;# 
   986  1FE5                     	;# 
   987  1FE6                     	;# 
   988  1FE7                     	;# 
   989  1FE8                     	;# 
   990  1FE8                     	;# 
   991  1FE9                     	;# 
   992  1FEA                     	;# 
   993  1FEB                     	;# 
   994  1FED                     	;# 
   995  1FEE                     	;# 
   996  1FEF                     	;# 
   997                           
   998 ;; Function _wr1RegCompleteHandler is unused but had its address taken
   999  0000                     
  1000 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  1001  0000                     
  1002 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  1003  0000                     
  1004 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  1005  0000                     
  1006 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  1007  0000                     
  1008 ;; Function _rd1RegCompleteHandler@i2c1_master_example$F143 is unused but had its address taken
  1009  0000                     
  1010 ;; Function _rd2RegCompleteHandler@i2c1_master_example$F154 is unused but had its address taken
  1011  0000                     
  1012 ;; Function _wr1RegCompleteHandler@i2c1_master_example$F160 is unused but had its address taken
  1013  0000                     
  1014 ;; Function _wr2RegCompleteHandler@i2c1_master_example$F166 is unused but had its address taken
  1015  0000                     
  1016 ;; Function _rdBlkRegCompleteHandler@i2c1_master_example$F177 is unused but had its address taken
  1017  0000                     
  1018 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  1019  0000                     
  1020 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  1021  0000                     
  1022 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  1023  0000                     
  1024 ;; Function _I2C1_DO_TX is unused but had its address taken
  1025  0000                     
  1026 ;; Function _I2C1_DO_RX is unused but had its address taken
  1027  0000                     
  1028 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  1029  0000                     
  1030 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  1031  0000                     
  1032 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  1033  0000                     
  1034 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  1035  0000                     
  1036 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  1037  0000                     
  1038 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  1039  0000                     
  1040 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  1041  0000                     
  1042 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  1043  0000                     
  1044 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  1045  0000                     
  1046 ;; Function _I2C1_DO_RESET is unused but had its address taken
  1047  0000                     
  1048 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  1049  0000                     
  1050 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  1051  0000                     
  1052 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  1053  0000                     
  1054                           	psect	idataCOMMON
  1055  035C                     __pidataCOMMON:
  1056                           
  1057                           ;initializer for _BackLight_State
  1058  035C  3408               	retlw	8
  1059                           
  1060                           	psect	idataBANK0
  1061  03FB                     __pidataBANK0:
  1062                           
  1063                           ;initializer for _combinacion
  1064  03FB  347C               	retlw	low (STR_6| (0+32768))
  1065  03FC  3488               	retlw	high (STR_6| (0+32768))
  1066  03FD  347C               	retlw	low (STR_6| (0+32768))
  1067  03FE  3488               	retlw	high (STR_6| (0+32768))
  1068  03FF  347C               	retlw	low (STR_6| (0+32768))
  1069  0400  3488               	retlw	high (STR_6| (0+32768))
  1070  0401  347C               	retlw	low (STR_6| (0+32768))
  1071  0402  3488               	retlw	high (STR_6| (0+32768))
  1072  0403  347C               	retlw	low (STR_6| (0+32768))
  1073  0404  3488               	retlw	high (STR_6| (0+32768))
  1074                           
  1075                           ;initializer for _Contrasena
  1076  0405  347E               	retlw	low (STR_1| (0+32768))
  1077  0406  3488               	retlw	high (STR_1| (0+32768))
  1078  0407  3480               	retlw	low (STR_2| (0+32768))
  1079  0408  3488               	retlw	high (STR_2| (0+32768))
  1080  0409  3482               	retlw	low (STR_3| (0+32768))
  1081  040A  3488               	retlw	high (STR_3| (0+32768))
  1082  040B  3480               	retlw	low (STR_2| (0+32768))
  1083  040C  3488               	retlw	high (STR_2| (0+32768))
  1084  040D  347E               	retlw	low (STR_1| (0+32768))
  1085  040E  3488               	retlw	high (STR_1| (0+32768))
  1086                           
  1087                           	psect	stringtext1
  1088  0800                     __pstringtext1:
  1089  0800                     _i2c1_fsmStateTable:
  1090  0800  3400               	retlw	0
  1091  0801  3400               	retlw	0
  1092  0802  3400               	retlw	0
  1093  0803  3400               	retlw	0
  1094  0804  3400               	retlw	0
  1095  0805  3400               	retlw	0
  1096  0806  3400               	retlw	0
  1097  0807  3400               	retlw	0
  1098  0808  3400               	retlw	0
  1099  0809  3400               	retlw	0
  1100  080A  3400               	retlw	0
  1101  080B  3400               	retlw	0
  1102  080C  3400               	retlw	0
  1103  080D  3400               	retlw	0
  1104  080E  3400               	retlw	0
  1105  080F  3400               	retlw	0
  1106  0810  3400               	retlw	0
  1107  0811  3400               	retlw	0
  1108  0812  3400               	retlw	0
  1109  0813  3400               	retlw	0
  1110  0814  3400               	retlw	0
  1111  0815  3400               	retlw	0
  1112  0816  3400               	retlw	0
  1113  0817  3400               	retlw	0
  1114  0818  3400               	retlw	0
  1115  0819  3400               	retlw	0
  1116  081A  3400               	retlw	0
  1117  081B  3400               	retlw	0
  1118  081C  3400               	retlw	0
  1119  081D  3400               	retlw	0
  1120  081E  3400               	retlw	0
  1121  081F  3400               	retlw	0
  1122  0820                     __end_of_i2c1_fsmStateTable:
  1123                           
  1124                           	psect	nvCOMMON
  1125  007B                     __pnvCOMMON:
  1126  007B                     _i2c_add:
  1127  007B                     	ds	1
  1128  001A                     _LATCbits	set	26
  1129  000E                     _PORTCbits	set	14
  1130  0014                     _TRISC	set	20
  1131  0013                     _TRISB	set	19
  1132  0012                     _TRISA	set	18
  1133  001A                     _LATC	set	26
  1134  0019                     _LATB	set	25
  1135  0018                     _LATA	set	24
  1136  009C                     _TRISB4	set	156
  1137  009E                     _TRISB6	set	158
  1138  018F                     _SSP1STATbits	set	399
  1139  0191                     _SSP1CON2bits	set	401
  1140  018C                     _SSP1BUF	set	396
  1141  0190                     _SSP1CON1bits	set	400
  1142  018D                     _SSP1ADD	set	397
  1143  0191                     _SSP1CON2	set	401
  1144  0190                     _SSP1CON1	set	400
  1145  018F                     _SSP1STAT	set	399
  1146  0C8B                     _RCEN	set	3211
  1147  0C8E                     _ACKSTAT	set	3214
  1148  0C8C                     _ACKEN	set	3212
  1149  0C8D                     _ACKDT	set	3213
  1150  0C8A                     _PEN	set	3210
  1151  0C89                     _RSEN	set	3209
  1152  0C88                     _SEN1	set	3208
  1153  0717                     _PIE1bits	set	1815
  1154  070D                     _PIR1bits	set	1805
  1155  3869                     _SSP1IF	set	14441
  1156  080C                     _WDTCON	set	2060
  1157  0892                     _OSCTUNE	set	2194
  1158  0893                     _OSCFRQ	set	2195
  1159  0891                     _OSCEN	set	2193
  1160  1EC6                     _SSP1DATPPS	set	7878
  1161  1EC5                     _SSP1CLKPPS	set	7877
  1162  1F1C                     _RB4PPS	set	7964
  1163  1F1E                     _RB6PPS	set	7966
  1164  1F52                     _INLVLC	set	8018
  1165  1F47                     _INLVLB	set	8007
  1166  1F3C                     _INLVLA	set	7996
  1167  1F51                     _SLRCONC	set	8017
  1168  1F46                     _SLRCONB	set	8006
  1169  1F3B                     _SLRCONA	set	7995
  1170  1F50                     _ODCONC	set	8016
  1171  1F45                     _ODCONB	set	8005
  1172  1F3A                     _ODCONA	set	7994
  1173  1F4F                     _WPUC	set	8015
  1174  1F39                     _WPUA	set	7993
  1175  1F44                     _WPUB	set	8004
  1176  1F38                     _ANSELA	set	7992
  1177  1F43                     _ANSELB	set	8003
  1178  1F4E                     _ANSELC	set	8014
  1179                           
  1180                           	psect	stringtext2
  1181  0820                     __pstringtext2:
  1182  0820                     STR_25:
  1183  0820  3442               	retlw	66	;'B'
  1184  0821  346C               	retlw	108	;'l'
  1185  0822  346F               	retlw	111	;'o'
  1186  0823  3471               	retlw	113	;'q'
  1187  0824  3475               	retlw	117	;'u'
  1188  0825  3465               	retlw	101	;'e'
  1189  0826  346F               	retlw	111	;'o'
  1190  0827  3420               	retlw	32	;' '
  1191  0828  3464               	retlw	100	;'d'
  1192  0829  3465               	retlw	101	;'e'
  1193  082A  3420               	retlw	32	;' '
  1194  082B  3473               	retlw	115	;'s'
  1195  082C  3465               	retlw	101	;'e'
  1196  082D  3467               	retlw	103	;'g'
  1197  082E  3475               	retlw	117	;'u'
  1198  082F  3472               	retlw	114	;'r'
  1199  0830  3469               	retlw	105	;'i'
  1200  0831  3464               	retlw	100	;'d'
  1201  0832  3461               	retlw	97	;'a'
  1202  0833  3464               	retlw	100	;'d'
  1203  0834  3400               	retlw	0
  1204                           
  1205                           	psect	stringtext3
  1206  0835                     __pstringtext3:
  1207  0835                     STR_20:
  1208  0835  3443               	retlw	67	;'C'
  1209  0836  346F               	retlw	111	;'o'
  1210  0837  346E               	retlw	110	;'n'
  1211  0838  3474               	retlw	116	;'t'
  1212  0839  3420               	retlw	32	;' '
  1213  083A  3469               	retlw	105	;'i'
  1214  083B  346E               	retlw	110	;'n'
  1215  083C  3463               	retlw	99	;'c'
  1216  083D  346F               	retlw	111	;'o'
  1217  083E  3472               	retlw	114	;'r'
  1218  083F  3472               	retlw	114	;'r'
  1219  0840  3465               	retlw	101	;'e'
  1220  0841  3463               	retlw	99	;'c'
  1221  0842  3474               	retlw	116	;'t'
  1222  0843  3461               	retlw	97	;'a'
  1223  0844  3400               	retlw	0
  1224                           
  1225                           	psect	stringtext4
  1226  0845                     __pstringtext4:
  1227  0845                     STR_14:
  1228  0845  3443               	retlw	67	;'C'
  1229  0846  346F               	retlw	111	;'o'
  1230  0847  346E               	retlw	110	;'n'
  1231  0848  3474               	retlw	116	;'t'
  1232  0849  3420               	retlw	32	;' '
  1233  084A  3463               	retlw	99	;'c'
  1234  084B  346F               	retlw	111	;'o'
  1235  084C  3472               	retlw	114	;'r'
  1236  084D  3472               	retlw	114	;'r'
  1237  084E  3465               	retlw	101	;'e'
  1238  084F  3463               	retlw	99	;'c'
  1239  0850  3474               	retlw	116	;'t'
  1240  0851  3461               	retlw	97	;'a'
  1241  0852  3400               	retlw	0
  1242                           
  1243                           	psect	stringtext5
  1244  0853                     __pstringtext5:
  1245  0853                     STR_19:
  1246  0853  3453               	retlw	83	;'S'
  1247  0854  3465               	retlw	101	;'e'
  1248  0855  346E               	retlw	110	;'n'
  1249  0856  3473               	retlw	115	;'s'
  1250  0857  3461               	retlw	97	;'a'
  1251  0858  346E               	retlw	110	;'n'
  1252  0859  3464               	retlw	100	;'d'
  1253  085A  346F               	retlw	111	;'o'
  1254  085B  342E               	retlw	46	;'.'
  1255  085C  342E               	retlw	46	;'.'
  1256  085D  342E               	retlw	46	;'.'
  1257  085E  3400               	retlw	0
  1258                           
  1259                           	psect	stringtext6
  1260  085F                     __pstringtext6:
  1261  085F                     STR_36:
  1262  085F  3443               	retlw	67	;'C'
  1263  0860  346F               	retlw	111	;'o'
  1264  0861  346E               	retlw	110	;'n'
  1265  0862  3474               	retlw	116	;'t'
  1266  0863  3472               	retlw	114	;'r'
  1267  0864  3461               	retlw	97	;'a'
  1268  0865  3473               	retlw	115	;'s'
  1269  0866  3465               	retlw	101	;'e'
  1270  0867  346E               	retlw	110	;'n'
  1271  0868  3461               	retlw	97	;'a'
  1272  0869  3400               	retlw	0
  1273                           
  1274                           	psect	stringtext7
  1275  086A                     __pstringtext7:
  1276  086A                     STR_26:
  1277  086A  3443               	retlw	67	;'C'
  1278  086B  346F               	retlw	111	;'o'
  1279  086C  3474               	retlw	116	;'t'
  1280  086D  3472               	retlw	114	;'r'
  1281  086E  3461               	retlw	97	;'a'
  1282  086F  3473               	retlw	115	;'s'
  1283  0870  3465               	retlw	101	;'e'
  1284  0871  346E               	retlw	110	;'n'
  1285  0872  3461               	retlw	97	;'a'
  1286  0873  3400               	retlw	0
  1287                           
  1288                           	psect	stringtext8
  1289  0874                     __pstringtext8:
  1290  0874                     STR_27:
  1291  0874  3449               	retlw	73	;'I'
  1292  0875  346E               	retlw	110	;'n'
  1293  0876  3474               	retlw	116	;'t'
  1294  0877  3472               	retlw	114	;'r'
  1295  0878  3475               	retlw	117	;'u'
  1296  0879  3473               	retlw	115	;'s'
  1297  087A  346F               	retlw	111	;'o'
  1298  087B  3400               	retlw	0
  1299                           
  1300                           	psect	stringtext9
  1301  087C                     __pstringtext9:
  1302  087C                     STR_6:
  1303  087C  3430               	retlw	48	;'0'
  1304  087D  3400               	retlw	0
  1305                           
  1306                           	psect	stringtext10
  1307  087E                     __pstringtext10:
  1308  087E                     STR_1:
  1309  087E  3431               	retlw	49	;'1'
  1310  087F  3400               	retlw	0
  1311                           
  1312                           	psect	stringtext11
  1313  0880                     __pstringtext11:
  1314  0880                     STR_2:
  1315  0880  3432               	retlw	50	;'2'
  1316  0881  3400               	retlw	0
  1317                           
  1318                           	psect	stringtext12
  1319  0882                     __pstringtext12:
  1320  0882                     STR_3:
  1321  0882  3433               	retlw	51	;'3'
  1322  0883  3400               	retlw	0
  1323                           
  1324                           	psect	stringtext13
  1325  0000                     __pstringtext13:
  1326  087C                     
  1327                           	psect	cinit
  1328  07E4                     start_initialization:	
  1329                           ; #config settings
  1330                           
  1331  07E4                     __initialization:
  1332                           
  1333                           ; Initialize objects allocated to COMMON
  1334  07E4  3183  235C  3187   	fcall	__pidataCOMMON	;fetch initializer
  1335  07E7  00FD               	movwf	__pdataCOMMON& (0+127)
  1336                           
  1337                           ; Initialize objects allocated to BANK0
  1338  07E8  30FB               	movlw	low __pidataBANK0
  1339  07E9  0084               	movwf	4
  1340  07EA  3083               	movlw	(high __pidataBANK0)| (0+128)
  1341  07EB  0085               	movwf	5
  1342  07EC  3045               	movlw	low __pdataBANK0
  1343  07ED  0086               	movwf	6
  1344  07EE  3000               	movlw	high __pdataBANK0
  1345  07EF  0087               	movwf	7
  1346  07F0  3014               	movlw	20
  1347  07F1  3183  2378  3187   	fcall	init_ram
  1348                           
  1349                           ; Clear objects allocated to COMMON
  1350  07F4  01FC               	clrf	__pbssCOMMON& (0+127)
  1351                           
  1352                           ; Clear objects allocated to BANK0
  1353  07F5  3020               	movlw	low __pbssBANK0
  1354  07F6  0084               	movwf	4
  1355  07F7  3000               	movlw	high __pbssBANK0
  1356  07F8  0085               	movwf	5
  1357  07F9  3025               	movlw	37
  1358  07FA  3183  2372  3187   	fcall	clear_ram0
  1359  07FD                     end_of_initialization:	
  1360                           ;End of C runtime variable initialization code
  1361                           
  1362  07FD                     __end_of__initialization:
  1363  07FD  0140               	movlb	0
  1364  07FE  3184  2C41         	ljmp	_main	;jump to C main() function
  1365                           
  1366                           	psect	bssCOMMON
  1367  007C                     __pbssCOMMON:
  1368  007C                     _RS:
  1369  007C                     	ds	1
  1370                           
  1371                           	psect	dataCOMMON
  1372  007D                     __pdataCOMMON:
  1373  007D                     _BackLight_State:
  1374  007D                     	ds	1
  1375                           
  1376                           	psect	bssBANK0
  1377  0020                     __pbssBANK0:
  1378  0020                     _I2C1_Status:
  1379  0020                     	ds	29
  1380  003D                     _AuxEstado:
  1381  003D                     	ds	2
  1382  003F                     _intentos:
  1383  003F                     	ds	2
  1384  0041                     _Estado:
  1385  0041                     	ds	2
  1386  0043                     _Auxiliar:
  1387  0043                     	ds	2
  1388                           
  1389                           	psect	dataBANK0
  1390  0045                     __pdataBANK0:
  1391  0045                     _combinacion:
  1392  0045                     	ds	10
  1393  004F                     _Contrasena:
  1394  004F                     	ds	10
  1395                           
  1396                           	psect	inittext
  1397  0378                     init_ram:
  1398  0378  00FE               	movwf	btemp
  1399  0379                     initloop:
  1400  0379  0012               	moviw fsr0++
  1401  037A  001E               	movwi fsr1++
  1402  037B  0BFE               	decfsz	btemp,f
  1403  037C  2B79               	goto	initloop
  1404  037D  3400               	retlw	0
  1405                           
  1406                           	psect	clrtext
  1407  0372                     clear_ram0:	
  1408                           ;	Called with FSR0 containing the base address, and
  1409                           ;	WREG with the size to clear
  1410                           
  1411  0372  0064               	clrwdt	;clear the watchdog before getting into this loop
  1412  0373                     clrloop0:
  1413  0373  0180               	clrf	0	;clear RAM location pointed to by FSR
  1414  0374  3101               	addfsr 0,1
  1415  0375  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1416  0376  2B73               	goto	clrloop0	;have we reached the end yet?
  1417  0377  3400               	retlw	0	;all done for this memory range, return
  1418                           
  1419                           	psect	cstackCOMMON
  1420  0070                     __pcstackCOMMON:
  1421  0070                     ?_PIN_MANAGER_Initialize:
  1422  0070                     ??_PIN_MANAGER_Initialize:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ?_OSCILLATOR_Initialize:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ??_OSCILLATOR_Initialize:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_WDT_Initialize:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     ??_WDT_Initialize:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  0070                     ?_LCD_Clear:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ?_I2C_Master_Init:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443  0070                     ??_I2C_Master_Init:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446  0070                     ?_LCD_Init:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449  0070                     ?_IO_Expander_Write:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0070                     ?_LCD_CMD:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     ?_I2C1_Initialize:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458  0070                     ??_I2C1_Initialize:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461  0070                     ?_SYSTEM_Initialize:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464  0070                     ??_SYSTEM_Initialize:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467  0070                     ?_contra:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_main:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ?_I2C_Master_Wait:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ??_I2C_Master_Wait:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_I2C_Master_Start:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ??_I2C_Master_Start:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ?_I2C_Master_Stop:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ??_I2C_Master_Stop:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_I2C_Master_Write:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ??_I2C_Master_Write:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_LCD_Write_4Bit:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_LCD_Write_Char:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     I2C_Master_Write@data:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x0
  1508  0070                     	ds	1
  1509  0071                     ??_IO_Expander_Write:
  1510  0071                     IO_Expander_Write@Data:	
  1511                           ; 1 bytes @ 0x1
  1512                           
  1513                           
  1514                           ; 1 bytes @ 0x1
  1515  0071                     	ds	1
  1516  0072                     ??_LCD_Write_4Bit:
  1517                           
  1518                           ; 1 bytes @ 0x2
  1519  0072                     	ds	1
  1520  0073                     LCD_Write_4Bit@Nibble:
  1521                           
  1522                           ; 1 bytes @ 0x3
  1523  0073                     	ds	1
  1524  0074                     ??_LCD_CMD:
  1525  0074                     ??_LCD_Write_Char:	
  1526                           ; 1 bytes @ 0x4
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0x4
  1530  0074                     	ds	1
  1531  0075                     LCD_CMD@CMD:
  1532  0075                     LCD_Write_Char@Data:	
  1533                           ; 1 bytes @ 0x5
  1534                           
  1535                           
  1536                           ; 1 bytes @ 0x5
  1537  0075                     	ds	1
  1538  0076                     ?_LCD_Set_Cursor:
  1539  0076                     ?_LCD_Write_String:	
  1540                           ; 1 bytes @ 0x6
  1541                           
  1542  0076                     ??_LCD_Clear:	
  1543                           ; 1 bytes @ 0x6
  1544                           
  1545  0076                     ??_LCD_Init:	
  1546                           ; 1 bytes @ 0x6
  1547                           
  1548  0076                     LCD_Set_Cursor@COL:	
  1549                           ; 1 bytes @ 0x6
  1550                           
  1551  0076                     LCD_Write_String@Str:	
  1552                           ; 1 bytes @ 0x6
  1553                           
  1554                           
  1555                           ; 2 bytes @ 0x6
  1556  0076                     	ds	1
  1557  0077                     ??_LCD_Set_Cursor:
  1558  0077                     LCD_Init@I2C_Add:	
  1559                           ; 1 bytes @ 0x7
  1560                           
  1561                           
  1562                           ; 1 bytes @ 0x7
  1563  0077                     	ds	1
  1564  0078                     ??_LCD_Write_String:
  1565                           
  1566                           ; 1 bytes @ 0x8
  1567  0078                     	ds	1
  1568  0079                     LCD_Set_Cursor@ROW:
  1569  0079                     LCD_Write_String@i:	
  1570                           ; 1 bytes @ 0x9
  1571                           
  1572                           
  1573                           ; 2 bytes @ 0x9
  1574  0079                     	ds	2
  1575  007B                     ??_main:
  1576                           
  1577                           	psect	cstackBANK0
  1578  0059                     __pcstackBANK0:	
  1579                           ; 1 bytes @ 0xB
  1580                           
  1581  0059                     ??_contra:
  1582                           
  1583                           ; 1 bytes @ 0x0
  1584  0059                     	ds	4
  1585  005D                     contra@i:
  1586                           
  1587                           ; 2 bytes @ 0x4
  1588  005D                     	ds	2
  1589  005F                     contra@i_1209:
  1590                           
  1591                           ; 2 bytes @ 0x6
  1592  005F                     	ds	2
  1593                           
  1594                           	psect	maintext
  1595  0441                     __pmaintext:	
  1596 ;;
  1597 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1598 ;;
  1599 ;; *************** function _main *****************
  1600 ;; Defined at:
  1601 ;;		line 213 in file "main.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : B3F/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1615 ;;      Params:         0       0       0       0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0
  1618 ;;      Totals:         0       0       0       0       0       0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels required when called: 7
  1621 ;; This function calls:
  1622 ;;		_I2C_Master_Init
  1623 ;;		_LCD_Init
  1624 ;;		_LCD_Set_Cursor
  1625 ;;		_LCD_Write_String
  1626 ;;		_SYSTEM_Initialize
  1627 ;;		_contra
  1628 ;; This function is called by:
  1629 ;;		Startup code after reset
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _main
  1635  0441                     _main:
  1636  0441                     l2768:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1639                           
  1640                           
  1641                           ;main.c: 216:     SYSTEM_Initialize();
  1642  0441  3183  23A7  3184   	fcall	_SYSTEM_Initialize
  1643                           
  1644                           ;main.c: 218:     I2C_Master_Init();
  1645  0444  3183  2390  3184   	fcall	_I2C_Master_Init
  1646                           
  1647                           ;main.c: 219:     LCD_Init(0x4E);
  1648  0447  304E               	movlw	78
  1649  0448  3184  24BE  3184   	fcall	_LCD_Init
  1650  044B                     l2770:
  1651                           
  1652                           ;main.c: 221:     LCD_Set_Cursor(1, 1);
  1653  044B  01F6               	clrf	LCD_Set_Cursor@COL
  1654  044C  0AF6               	incf	LCD_Set_Cursor@COL,f
  1655  044D  3001               	movlw	1
  1656  044E  3184  2460  3184   	fcall	_LCD_Set_Cursor
  1657  0451                     l2772:
  1658                           
  1659                           ;main.c: 222:     LCD_Write_String("Cotrasena");
  1660  0451  306A               	movlw	low (STR_26| (0+32768))
  1661  0452  00F6               	movwf	LCD_Write_String@Str
  1662  0453  3088               	movlw	high (STR_26| (0+32768))
  1663  0454  00F7               	movwf	LCD_Write_String@Str+1
  1664  0455  3184  2424  3184   	fcall	_LCD_Write_String
  1665  0458                     l2774:
  1666  0458  0140               	movlb	0	; select bank0
  1667  0459  131A               	bcf	26,6	;volatile
  1668  045A                     l2776:
  1669                           
  1670                           ;main.c: 226:     {;main.c: 227:         contra();
  1671  045A  3185  2530  3184   	fcall	_contra
  1672  045D  2C5A               	goto	l2776
  1673  045E  3180  2802         	ljmp	start
  1674  0460                     __end_of_main:
  1675                           
  1676                           	psect	text1
  1677  0530                     __ptext1:	
  1678 ;; *************** function _contra *****************
  1679 ;; Defined at:
  1680 ;;		line 11 in file "main.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  i               2    6[BANK0 ] int 
  1685 ;;  i               2    4[BANK0 ] int 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1695 ;;      Params:         0       0       0       0       0       0       0       0
  1696 ;;      Locals:         0       4       0       0       0       0       0       0
  1697 ;;      Temps:          0       4       0       0       0       0       0       0
  1698 ;;      Totals:         0       8       0       0       0       0       0       0
  1699 ;;Total ram usage:        8 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 6
  1702 ;; This function calls:
  1703 ;;		_LCD_Clear
  1704 ;;		_LCD_Set_Cursor
  1705 ;;		_LCD_Write_String
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _contra
  1713  0530                     _contra:
  1714  0530                     l2532:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _contra: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1717                           
  1718                           
  1719                           ;main.c: 13:     switch(Estado)
  1720  0530  2FCF               	goto	l2736
  1721  0531                     l647:	
  1722                           ;main.c: 14:     {;main.c: 15:         case 0:
  1723                           
  1724                           
  1725                           ;main.c: 17:             if(!PORTCbits.RC0)
  1726  0531  180E               	btfsc	14,0	;volatile
  1727  0532  2D34               	goto	u761
  1728  0533  2D35               	goto	u760
  1729  0534                     u761:
  1730  0534  2D4F               	goto	l2540
  1731  0535                     u760:
  1732  0535                     l2534:
  1733                           
  1734                           ;main.c: 18:             {;main.c: 19:                 _delay((unsigned long)((250)*(400
      +                          0000/4000.0)));
  1735  0535  3002               	movlw	2
  1736  0536  0140               	movlb	0	; select bank0
  1737  0537  00DA               	movwf	??_contra+1
  1738  0538  3045               	movlw	69
  1739  0539  00D9               	movwf	??_contra
  1740  053A  30A9               	movlw	169
  1741  053B                     u947:
  1742  053B  0B89               	decfsz	9,f
  1743  053C  2D3B               	goto	u947
  1744  053D  0BD9               	decfsz	??_contra,f
  1745  053E  2D3B               	goto	u947
  1746  053F  0BDA               	decfsz	??_contra+1,f
  1747  0540  2D3B               	goto	u947
  1748  0541  3200               	nop2
  1749  0542                     l2536:
  1750                           
  1751                           ;main.c: 20:                 combinacion[Auxiliar] = "1";
  1752  0542  0140               	movlb	0	; select bank0
  1753  0543  3543               	lslf	_Auxiliar,w
  1754  0544  3E45               	addlw	(low (_combinacion| 0))& (0+255)
  1755  0545  0086               	movwf	6
  1756  0546  0187               	clrf	7
  1757  0547  307E               	movlw	low (STR_1| (0+32768))
  1758  0548  3FC0               	movwi [0]fsr1
  1759  0549  3088               	movlw	high (STR_1| (0+32768))
  1760  054A  3FC1               	movwi [1]fsr1
  1761  054B                     l2538:
  1762                           
  1763                           ;main.c: 21:                 Auxiliar += 1;
  1764  054B  3001               	movlw	1
  1765  054C  07C3               	addwf	_Auxiliar,f
  1766  054D  3000               	movlw	0
  1767  054E  3DC4               	addwfc	_Auxiliar+1,f
  1768  054F                     l2540:
  1769                           
  1770                           ;main.c: 24:             if(!PORTCbits.RC1)
  1771  054F  188E               	btfsc	14,1	;volatile
  1772  0550  2D52               	goto	u771
  1773  0551  2D53               	goto	u770
  1774  0552                     u771:
  1775  0552  2D6D               	goto	l2548
  1776  0553                     u770:
  1777  0553                     l2542:
  1778                           
  1779                           ;main.c: 25:             {;main.c: 26:                 _delay((unsigned long)((250)*(400
      +                          0000/4000.0)));
  1780  0553  3002               	movlw	2
  1781  0554  0140               	movlb	0	; select bank0
  1782  0555  00DA               	movwf	??_contra+1
  1783  0556  3045               	movlw	69
  1784  0557  00D9               	movwf	??_contra
  1785  0558  30A9               	movlw	169
  1786  0559                     u957:
  1787  0559  0B89               	decfsz	9,f
  1788  055A  2D59               	goto	u957
  1789  055B  0BD9               	decfsz	??_contra,f
  1790  055C  2D59               	goto	u957
  1791  055D  0BDA               	decfsz	??_contra+1,f
  1792  055E  2D59               	goto	u957
  1793  055F  3200               	nop2
  1794  0560                     l2544:
  1795                           
  1796                           ;main.c: 27:                 combinacion[Auxiliar] = "2";
  1797  0560  0140               	movlb	0	; select bank0
  1798  0561  3543               	lslf	_Auxiliar,w
  1799  0562  3E45               	addlw	(low (_combinacion| 0))& (0+255)
  1800  0563  0086               	movwf	6
  1801  0564  0187               	clrf	7
  1802  0565  3080               	movlw	low (STR_2| (0+32768))
  1803  0566  3FC0               	movwi [0]fsr1
  1804  0567  3088               	movlw	high (STR_2| (0+32768))
  1805  0568  3FC1               	movwi [1]fsr1
  1806  0569                     l2546:
  1807                           
  1808                           ;main.c: 28:                 Auxiliar += 1;
  1809  0569  3001               	movlw	1
  1810  056A  07C3               	addwf	_Auxiliar,f
  1811  056B  3000               	movlw	0
  1812  056C  3DC4               	addwfc	_Auxiliar+1,f
  1813  056D                     l2548:
  1814                           
  1815                           ;main.c: 31:             if(!PORTCbits.RC5)
  1816  056D  1A8E               	btfsc	14,5	;volatile
  1817  056E  2D70               	goto	u781
  1818  056F  2D71               	goto	u780
  1819  0570                     u781:
  1820  0570  2D8B               	goto	l2556
  1821  0571                     u780:
  1822  0571                     l2550:
  1823                           
  1824                           ;main.c: 32:             {;main.c: 33:                 _delay((unsigned long)((250)*(400
      +                          0000/4000.0)));
  1825  0571  3002               	movlw	2
  1826  0572  0140               	movlb	0	; select bank0
  1827  0573  00DA               	movwf	??_contra+1
  1828  0574  3045               	movlw	69
  1829  0575  00D9               	movwf	??_contra
  1830  0576  30A9               	movlw	169
  1831  0577                     u967:
  1832  0577  0B89               	decfsz	9,f
  1833  0578  2D77               	goto	u967
  1834  0579  0BD9               	decfsz	??_contra,f
  1835  057A  2D77               	goto	u967
  1836  057B  0BDA               	decfsz	??_contra+1,f
  1837  057C  2D77               	goto	u967
  1838  057D  3200               	nop2
  1839  057E                     l2552:
  1840                           
  1841                           ;main.c: 34:                 combinacion[Auxiliar] = "3";
  1842  057E  0140               	movlb	0	; select bank0
  1843  057F  3543               	lslf	_Auxiliar,w
  1844  0580  3E45               	addlw	(low (_combinacion| 0))& (0+255)
  1845  0581  0086               	movwf	6
  1846  0582  0187               	clrf	7
  1847  0583  3082               	movlw	low (STR_3| (0+32768))
  1848  0584  3FC0               	movwi [0]fsr1
  1849  0585  3088               	movlw	high (STR_3| (0+32768))
  1850  0586  3FC1               	movwi [1]fsr1
  1851  0587                     l2554:
  1852                           
  1853                           ;main.c: 35:                 Auxiliar += 1;
  1854  0587  3001               	movlw	1
  1855  0588  07C3               	addwf	_Auxiliar,f
  1856  0589  3000               	movlw	0
  1857  058A  3DC4               	addwfc	_Auxiliar+1,f
  1858  058B                     l2556:
  1859                           
  1860                           ;main.c: 39:             if(Auxiliar == 5)
  1861  058B  3005               	movlw	5
  1862  058C  0643               	xorwf	_Auxiliar,w
  1863  058D  0444               	iorwf	_Auxiliar+1,w
  1864  058E  1D03               	btfss	3,2
  1865  058F  2D91               	goto	u791
  1866  0590  2D92               	goto	u790
  1867  0591                     u791:
  1868  0591  2FE3               	goto	l689
  1869  0592                     u790:
  1870  0592                     l2558:
  1871                           
  1872                           ;main.c: 40:             {;main.c: 41:                 Auxiliar = 0;
  1873  0592  01C3               	clrf	_Auxiliar
  1874  0593  01C4               	clrf	_Auxiliar+1
  1875  0594                     l2560:
  1876                           
  1877                           ;main.c: 42:                 Estado = 1;
  1878  0594  3001               	movlw	1
  1879  0595  00C1               	movwf	_Estado
  1880  0596  3000               	movlw	0
  1881  0597  00C2               	movwf	_Estado+1
  1882  0598  2FE3               	goto	l689
  1883  0599                     l2562:
  1884                           
  1885                           ;main.c: 50:             for(int i = 0; i <= 4; i++)
  1886  0599  01DD               	clrf	contra@i
  1887  059A  01DE               	clrf	contra@i+1
  1888  059B                     l2568:
  1889                           
  1890                           ;main.c: 51:             {;main.c: 52:                 if(Contrasena[i] == combinacion[i
      +                          ])
  1891  059B  0140               	movlb	0	; select bank0
  1892  059C  355D               	lslf	contra@i,w
  1893  059D  3E45               	addlw	(low (_combinacion| 0))& (0+255)
  1894  059E  0086               	movwf	6
  1895  059F  0187               	clrf	7
  1896  05A0  3F40               	moviw [0]fsr1
  1897  05A1  00D9               	movwf	??_contra
  1898  05A2  3F41               	moviw [1]fsr1
  1899  05A3  00DA               	movwf	??_contra+1
  1900  05A4  355D               	lslf	contra@i,w
  1901  05A5  3E4F               	addlw	(low (_Contrasena| 0))& (0+255)
  1902  05A6  0086               	movwf	6
  1903  05A7  0187               	clrf	7
  1904  05A8  3F40               	moviw [0]fsr1
  1905  05A9  00DB               	movwf	??_contra+2
  1906  05AA  3F41               	moviw [1]fsr1
  1907  05AB  00DC               	movwf	??_contra+3
  1908  05AC  085A               	movf	??_contra+1,w
  1909  05AD  065C               	xorwf	??_contra+3,w
  1910  05AE  1D03               	skipz
  1911  05AF  2DB2               	goto	u805
  1912  05B0  0859               	movf	??_contra,w
  1913  05B1  065B               	xorwf	??_contra+2,w
  1914  05B2                     u805:
  1915  05B2  1D03               	skipz
  1916  05B3  2DB5               	goto	u801
  1917  05B4  2DB6               	goto	u800
  1918  05B5                     u801:
  1919  05B5  2DBB               	goto	l2572
  1920  05B6                     u800:
  1921  05B6                     l2570:
  1922                           
  1923                           ;main.c: 53:                 {;main.c: 54:                     Auxiliar += 1;
  1924  05B6  3001               	movlw	1
  1925  05B7  07C3               	addwf	_Auxiliar,f
  1926  05B8  3000               	movlw	0
  1927  05B9  3DC4               	addwfc	_Auxiliar+1,f
  1928                           
  1929                           ;main.c: 55:                 }
  1930  05BA  2DBE               	goto	l2574
  1931  05BB                     l2572:
  1932                           
  1933                           ;main.c: 57:                 {;main.c: 58:                     Auxiliar = 0;
  1934  05BB  01C3               	clrf	_Auxiliar
  1935  05BC  01C4               	clrf	_Auxiliar+1
  1936                           
  1937                           ;main.c: 59:                     break;
  1938  05BD  2DCF               	goto	l2576
  1939  05BE                     l2574:
  1940                           
  1941                           ;main.c: 61:             }
  1942  05BE  3001               	movlw	1
  1943  05BF  07DD               	addwf	contra@i,f
  1944  05C0  3000               	movlw	0
  1945  05C1  3DDE               	addwfc	contra@i+1,f
  1946  05C2  085E               	movf	contra@i+1,w
  1947  05C3  3A80               	xorlw	128
  1948  05C4  00D9               	movwf	??_contra
  1949  05C5  3080               	movlw	128
  1950  05C6  0259               	subwf	??_contra,w
  1951  05C7  1D03               	skipz
  1952  05C8  2DCB               	goto	u815
  1953  05C9  3005               	movlw	5
  1954  05CA  025D               	subwf	contra@i,w
  1955  05CB                     u815:
  1956  05CB  1C03               	skipc
  1957  05CC  2DCE               	goto	u811
  1958  05CD  2DCF               	goto	u810
  1959  05CE                     u811:
  1960  05CE  2D9B               	goto	l2568
  1961  05CF                     u810:
  1962  05CF                     l2576:
  1963                           
  1964                           ;main.c: 63:             if(Auxiliar == 5)
  1965  05CF  3005               	movlw	5
  1966  05D0  0140               	movlb	0	; select bank0
  1967  05D1  0643               	xorwf	_Auxiliar,w
  1968  05D2  0444               	iorwf	_Auxiliar+1,w
  1969  05D3  1D03               	btfss	3,2
  1970  05D4  2DD6               	goto	u821
  1971  05D5  2DD7               	goto	u820
  1972  05D6                     u821:
  1973  05D6  2E1D               	goto	l2602
  1974  05D7                     u820:
  1975  05D7                     l2578:
  1976                           
  1977                           ;main.c: 64:             {;main.c: 65:                 LCD_Set_Cursor(3, 1);
  1978  05D7  01F6               	clrf	LCD_Set_Cursor@COL
  1979  05D8  0AF6               	incf	LCD_Set_Cursor@COL,f
  1980  05D9  3003               	movlw	3
  1981  05DA  3184  2460  3185   	fcall	_LCD_Set_Cursor
  1982                           
  1983                           ;main.c: 66:                 LCD_Write_String("Cont correcta");
  1984  05DD  3045               	movlw	low (STR_14| (0+32768))
  1985  05DE  00F6               	movwf	LCD_Write_String@Str
  1986  05DF  3088               	movlw	high (STR_14| (0+32768))
  1987  05E0  00F7               	movwf	LCD_Write_String@Str+1
  1988  05E1  3184  2424  3185   	fcall	_LCD_Write_String
  1989  05E4                     l2580:
  1990                           
  1991                           ;main.c: 67:                 combinacion[0] = "0";
  1992  05E4  307C               	movlw	low (STR_6| (0+32768))
  1993  05E5  0140               	movlb	0	; select bank0
  1994  05E6  00C5               	movwf	_combinacion
  1995  05E7  3088               	movlw	high (STR_6| (0+32768))
  1996  05E8  00C6               	movwf	_combinacion+1
  1997  05E9                     l2582:
  1998                           
  1999                           ;main.c: 68:                 combinacion[1] = "0";
  2000  05E9  307C               	movlw	low (STR_6| (0+32768))
  2001  05EA  00C7               	movwf	low ((_combinacion| 0+2))
  2002  05EB  3088               	movlw	high (STR_6| (0+32768))
  2003  05EC  00C8               	movwf	(low ((_combinacion| 0+2))+1)
  2004  05ED                     l2584:
  2005                           
  2006                           ;main.c: 69:                 combinacion[2] = "0";
  2007  05ED  307C               	movlw	low (STR_6| (0+32768))
  2008  05EE  00C9               	movwf	low ((_combinacion| 0+4))
  2009  05EF  3088               	movlw	high (STR_6| (0+32768))
  2010  05F0  00CA               	movwf	(low ((_combinacion| 0+4))+1)
  2011  05F1                     l2586:
  2012                           
  2013                           ;main.c: 70:                 combinacion[3] = "0";
  2014  05F1  307C               	movlw	low (STR_6| (0+32768))
  2015  05F2  00CB               	movwf	low ((_combinacion| 0+6))
  2016  05F3  3088               	movlw	high (STR_6| (0+32768))
  2017  05F4  00CC               	movwf	(low ((_combinacion| 0+6))+1)
  2018  05F5                     l2588:
  2019                           
  2020                           ;main.c: 71:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  2021  05F5  300B               	movlw	11
  2022  05F6  0140               	movlb	0	; select bank0
  2023  05F7  00DA               	movwf	??_contra+1
  2024  05F8  3026               	movlw	38
  2025  05F9  00D9               	movwf	??_contra
  2026  05FA  305D               	movlw	93
  2027  05FB                     u977:
  2028  05FB  0B89               	decfsz	9,f
  2029  05FC  2DFB               	goto	u977
  2030  05FD  0BD9               	decfsz	??_contra,f
  2031  05FE  2DFB               	goto	u977
  2032  05FF  0BDA               	decfsz	??_contra+1,f
  2033  0600  2DFB               	goto	u977
  2034  0601  3200               	nop2
  2035  0602                     l2590:
  2036                           
  2037                           ;main.c: 72:                 LCD_Clear();
  2038  0602  3183  2387  3185   	fcall	_LCD_Clear
  2039  0605                     l2592:
  2040                           
  2041                           ;main.c: 73:                 Auxiliar = 0;
  2042  0605  0140               	movlb	0	; select bank0
  2043  0606  01C3               	clrf	_Auxiliar
  2044  0607  01C4               	clrf	_Auxiliar+1
  2045  0608                     l2594:
  2046                           
  2047                           ;main.c: 74:                 intentos = 0;
  2048  0608  01BF               	clrf	_intentos
  2049  0609  01C0               	clrf	_intentos+1
  2050  060A                     l2596:
  2051                           
  2052                           ;main.c: 75:                 LCD_Set_Cursor(1, 1);
  2053  060A  01F6               	clrf	LCD_Set_Cursor@COL
  2054  060B  0AF6               	incf	LCD_Set_Cursor@COL,f
  2055  060C  3001               	movlw	1
  2056  060D  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2057  0610                     l2598:
  2058                           
  2059                           ;main.c: 76:                 LCD_Write_String("Sensando...");
  2060  0610  3053               	movlw	low (STR_19| (0+32768))
  2061  0611  00F6               	movwf	LCD_Write_String@Str
  2062  0612  3088               	movlw	high (STR_19| (0+32768))
  2063  0613  00F7               	movwf	LCD_Write_String@Str+1
  2064  0614  3184  2424  3185   	fcall	_LCD_Write_String
  2065  0617                     l2600:
  2066                           
  2067                           ;main.c: 77:                 Estado = 2;
  2068  0617  3002               	movlw	2
  2069  0618  0140               	movlb	0	; select bank0
  2070  0619  00C1               	movwf	_Estado
  2071  061A  3000               	movlw	0
  2072  061B  00C2               	movwf	_Estado+1
  2073                           
  2074                           ;main.c: 79:             }
  2075  061C  2FE3               	goto	l689
  2076  061D                     l2602:
  2077                           
  2078                           ;main.c: 81:             {;main.c: 82:                 LCD_Set_Cursor(3, 1);
  2079  061D  01F6               	clrf	LCD_Set_Cursor@COL
  2080  061E  0AF6               	incf	LCD_Set_Cursor@COL,f
  2081  061F  3003               	movlw	3
  2082  0620  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2083                           
  2084                           ;main.c: 83:                 LCD_Write_String("Cont incorrecta");
  2085  0623  3035               	movlw	low (STR_20| (0+32768))
  2086  0624  00F6               	movwf	LCD_Write_String@Str
  2087  0625  3088               	movlw	high (STR_20| (0+32768))
  2088  0626  00F7               	movwf	LCD_Write_String@Str+1
  2089  0627  3184  2424  3185   	fcall	_LCD_Write_String
  2090  062A                     l2604:
  2091                           
  2092                           ;main.c: 84:                 combinacion[0] = "0";
  2093  062A  307C               	movlw	low (STR_6| (0+32768))
  2094  062B  0140               	movlb	0	; select bank0
  2095  062C  00C5               	movwf	_combinacion
  2096  062D  3088               	movlw	high (STR_6| (0+32768))
  2097  062E  00C6               	movwf	_combinacion+1
  2098  062F                     l2606:
  2099                           
  2100                           ;main.c: 85:                 combinacion[1] = "0";
  2101  062F  307C               	movlw	low (STR_6| (0+32768))
  2102  0630  00C7               	movwf	low ((_combinacion| 0+2))
  2103  0631  3088               	movlw	high (STR_6| (0+32768))
  2104  0632  00C8               	movwf	(low ((_combinacion| 0+2))+1)
  2105  0633                     l2608:
  2106                           
  2107                           ;main.c: 86:                 combinacion[2] = "0";
  2108  0633  307C               	movlw	low (STR_6| (0+32768))
  2109  0634  00C9               	movwf	low ((_combinacion| 0+4))
  2110  0635  3088               	movlw	high (STR_6| (0+32768))
  2111  0636  00CA               	movwf	(low ((_combinacion| 0+4))+1)
  2112  0637                     l2610:
  2113                           
  2114                           ;main.c: 87:                 combinacion[3] = "0";
  2115  0637  307C               	movlw	low (STR_6| (0+32768))
  2116  0638  00CB               	movwf	low ((_combinacion| 0+6))
  2117  0639  3088               	movlw	high (STR_6| (0+32768))
  2118  063A  00CC               	movwf	(low ((_combinacion| 0+6))+1)
  2119  063B                     l2612:
  2120                           
  2121                           ;main.c: 88:                 intentos++;
  2122  063B  3001               	movlw	1
  2123  063C  07BF               	addwf	_intentos,f
  2124  063D  3000               	movlw	0
  2125  063E  3DC0               	addwfc	_intentos+1,f
  2126  063F                     l2614:
  2127                           
  2128                           ;main.c: 89:                 Auxiliar = 0;
  2129  063F  01C3               	clrf	_Auxiliar
  2130  0640  01C4               	clrf	_Auxiliar+1
  2131  0641                     l2616:
  2132                           
  2133                           ;main.c: 90:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  2134  0641  300B               	movlw	11
  2135  0642  0140               	movlb	0	; select bank0
  2136  0643  00DA               	movwf	??_contra+1
  2137  0644  3026               	movlw	38
  2138  0645  00D9               	movwf	??_contra
  2139  0646  305D               	movlw	93
  2140  0647                     u987:
  2141  0647  0B89               	decfsz	9,f
  2142  0648  2E47               	goto	u987
  2143  0649  0BD9               	decfsz	??_contra,f
  2144  064A  2E47               	goto	u987
  2145  064B  0BDA               	decfsz	??_contra+1,f
  2146  064C  2E47               	goto	u987
  2147  064D  3200               	nop2
  2148  064E                     l2618:
  2149                           
  2150                           ;main.c: 91:                 LCD_Clear();
  2151  064E  3183  2387  3185   	fcall	_LCD_Clear
  2152  0651                     l2620:
  2153                           
  2154                           ;main.c: 92:                 if(intentos == 2)
  2155  0651  3002               	movlw	2
  2156  0652  0140               	movlb	0	; select bank0
  2157  0653  063F               	xorwf	_intentos,w
  2158  0654  0440               	iorwf	_intentos+1,w
  2159  0655  1D03               	btfss	3,2
  2160  0656  2E58               	goto	u831
  2161  0657  2E59               	goto	u830
  2162  0658                     u831:
  2163  0658  2E69               	goto	l2626
  2164  0659                     u830:
  2165  0659                     l2622:
  2166                           
  2167                           ;main.c: 95:                     {;main.c: 96:                         LCD_Set_Cursor(3,
      +                           1);
  2168  0659  01F6               	clrf	LCD_Set_Cursor@COL
  2169  065A  0AF6               	incf	LCD_Set_Cursor@COL,f
  2170  065B  3003               	movlw	3
  2171  065C  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2172                           
  2173                           ;main.c: 97:                         LCD_Write_String("Bloqueo de seguridad");
  2174  065F  3020               	movlw	low (STR_25| (0+32768))
  2175  0660  00F6               	movwf	LCD_Write_String@Str
  2176  0661  3088               	movlw	high (STR_25| (0+32768))
  2177  0662  00F7               	movwf	LCD_Write_String@Str+1
  2178  0663  3184  2424  3185   	fcall	_LCD_Write_String
  2179  0666                     l2624:
  2180  0666  0140               	movlb	0	; select bank0
  2181  0667  171A               	bsf	26,6	;volatile
  2182  0668  2E59               	goto	l2622
  2183  0669                     l2626:
  2184                           
  2185                           ;main.c: 102:                 LCD_Set_Cursor(1, 1);
  2186  0669  01F6               	clrf	LCD_Set_Cursor@COL
  2187  066A  0AF6               	incf	LCD_Set_Cursor@COL,f
  2188  066B  3001               	movlw	1
  2189  066C  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2190                           
  2191                           ;main.c: 103:                 LCD_Write_String("Cotrasena");
  2192  066F  306A               	movlw	low (STR_26| (0+32768))
  2193  0670  00F6               	movwf	LCD_Write_String@Str
  2194  0671  3088               	movlw	high (STR_26| (0+32768))
  2195  0672  00F7               	movwf	LCD_Write_String@Str+1
  2196  0673  3184  2424  3185   	fcall	_LCD_Write_String
  2197  0676                     l2628:
  2198                           
  2199                           ;main.c: 104:                 Estado = 0;
  2200  0676  0140               	movlb	0	; select bank0
  2201  0677  01C1               	clrf	_Estado
  2202  0678  01C2               	clrf	_Estado+1
  2203  0679  2FE3               	goto	l689
  2204  067A                     l666:	
  2205                           ;main.c: 110:         case 2:
  2206                           
  2207                           
  2208                           ;main.c: 112:             if(PORTCbits.RC4)
  2209  067A  1E0E               	btfss	14,4	;volatile
  2210  067B  2E7D               	goto	u841
  2211  067C  2E7E               	goto	u840
  2212  067D                     u841:
  2213  067D  2E8D               	goto	l2634
  2214  067E                     u840:
  2215  067E                     l2630:
  2216                           
  2217                           ;main.c: 113:             {;main.c: 114:                 LCD_Set_Cursor(2, 1);
  2218  067E  01F6               	clrf	LCD_Set_Cursor@COL
  2219  067F  0AF6               	incf	LCD_Set_Cursor@COL,f
  2220  0680  3002               	movlw	2
  2221  0681  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2222                           
  2223                           ;main.c: 115:                 LCD_Write_String("Intruso");
  2224  0684  3074               	movlw	low (STR_27| (0+32768))
  2225  0685  00F6               	movwf	LCD_Write_String@Str
  2226  0686  3088               	movlw	high (STR_27| (0+32768))
  2227  0687  00F7               	movwf	LCD_Write_String@Str+1
  2228  0688  3184  2424  3185   	fcall	_LCD_Write_String
  2229  068B                     l2632:
  2230  068B  0140               	movlb	0	; select bank0
  2231  068C  171A               	bsf	26,6	;volatile
  2232  068D                     l2634:
  2233                           
  2234                           ;main.c: 119:             if(!PORTCbits.RC0)
  2235  068D  180E               	btfsc	14,0	;volatile
  2236  068E  2E90               	goto	u851
  2237  068F  2E91               	goto	u850
  2238  0690                     u851:
  2239  0690  2EAB               	goto	l2642
  2240  0691                     u850:
  2241  0691                     l2636:
  2242                           
  2243                           ;main.c: 120:             {;main.c: 121:                 _delay((unsigned long)((250)*(4
      +                          000000/4000.0)));
  2244  0691  3002               	movlw	2
  2245  0692  0140               	movlb	0	; select bank0
  2246  0693  00DA               	movwf	??_contra+1
  2247  0694  3045               	movlw	69
  2248  0695  00D9               	movwf	??_contra
  2249  0696  30A9               	movlw	169
  2250  0697                     u997:
  2251  0697  0B89               	decfsz	9,f
  2252  0698  2E97               	goto	u997
  2253  0699  0BD9               	decfsz	??_contra,f
  2254  069A  2E97               	goto	u997
  2255  069B  0BDA               	decfsz	??_contra+1,f
  2256  069C  2E97               	goto	u997
  2257  069D  3200               	nop2
  2258  069E                     l2638:
  2259                           
  2260                           ;main.c: 122:                 combinacion[Auxiliar] = "1";
  2261  069E  0140               	movlb	0	; select bank0
  2262  069F  3543               	lslf	_Auxiliar,w
  2263  06A0  3E45               	addlw	(low (_combinacion| 0))& (0+255)
  2264  06A1  0086               	movwf	6
  2265  06A2  0187               	clrf	7
  2266  06A3  307E               	movlw	low (STR_1| (0+32768))
  2267  06A4  3FC0               	movwi [0]fsr1
  2268  06A5  3088               	movlw	high (STR_1| (0+32768))
  2269  06A6  3FC1               	movwi [1]fsr1
  2270  06A7                     l2640:
  2271                           
  2272                           ;main.c: 123:                 Auxiliar += 1;
  2273  06A7  3001               	movlw	1
  2274  06A8  07C3               	addwf	_Auxiliar,f
  2275  06A9  3000               	movlw	0
  2276  06AA  3DC4               	addwfc	_Auxiliar+1,f
  2277  06AB                     l2642:
  2278                           
  2279                           ;main.c: 126:             if(!PORTCbits.RC1)
  2280  06AB  188E               	btfsc	14,1	;volatile
  2281  06AC  2EAE               	goto	u861
  2282  06AD  2EAF               	goto	u860
  2283  06AE                     u861:
  2284  06AE  2EC9               	goto	l2650
  2285  06AF                     u860:
  2286  06AF                     l2644:
  2287                           
  2288                           ;main.c: 127:             {;main.c: 128:                 _delay((unsigned long)((250)*(4
      +                          000000/4000.0)));
  2289  06AF  3002               	movlw	2
  2290  06B0  0140               	movlb	0	; select bank0
  2291  06B1  00DA               	movwf	??_contra+1
  2292  06B2  3045               	movlw	69
  2293  06B3  00D9               	movwf	??_contra
  2294  06B4  30A9               	movlw	169
  2295  06B5                     u1007:
  2296  06B5  0B89               	decfsz	9,f
  2297  06B6  2EB5               	goto	u1007
  2298  06B7  0BD9               	decfsz	??_contra,f
  2299  06B8  2EB5               	goto	u1007
  2300  06B9  0BDA               	decfsz	??_contra+1,f
  2301  06BA  2EB5               	goto	u1007
  2302  06BB  3200               	nop2
  2303  06BC                     l2646:
  2304                           
  2305                           ;main.c: 129:                 combinacion[Auxiliar] = "2";
  2306  06BC  0140               	movlb	0	; select bank0
  2307  06BD  3543               	lslf	_Auxiliar,w
  2308  06BE  3E45               	addlw	(low (_combinacion| 0))& (0+255)
  2309  06BF  0086               	movwf	6
  2310  06C0  0187               	clrf	7
  2311  06C1  3080               	movlw	low (STR_2| (0+32768))
  2312  06C2  3FC0               	movwi [0]fsr1
  2313  06C3  3088               	movlw	high (STR_2| (0+32768))
  2314  06C4  3FC1               	movwi [1]fsr1
  2315  06C5                     l2648:
  2316                           
  2317                           ;main.c: 130:                 Auxiliar += 1;
  2318  06C5  3001               	movlw	1
  2319  06C6  07C3               	addwf	_Auxiliar,f
  2320  06C7  3000               	movlw	0
  2321  06C8  3DC4               	addwfc	_Auxiliar+1,f
  2322  06C9                     l2650:
  2323                           
  2324                           ;main.c: 133:             if(!PORTCbits.RC5)
  2325  06C9  1A8E               	btfsc	14,5	;volatile
  2326  06CA  2ECC               	goto	u871
  2327  06CB  2ECD               	goto	u870
  2328  06CC                     u871:
  2329  06CC  2EE7               	goto	l2658
  2330  06CD                     u870:
  2331  06CD                     l2652:
  2332                           
  2333                           ;main.c: 134:             {;main.c: 135:                 _delay((unsigned long)((250)*(4
      +                          000000/4000.0)));
  2334  06CD  3002               	movlw	2
  2335  06CE  0140               	movlb	0	; select bank0
  2336  06CF  00DA               	movwf	??_contra+1
  2337  06D0  3045               	movlw	69
  2338  06D1  00D9               	movwf	??_contra
  2339  06D2  30A9               	movlw	169
  2340  06D3                     u1017:
  2341  06D3  0B89               	decfsz	9,f
  2342  06D4  2ED3               	goto	u1017
  2343  06D5  0BD9               	decfsz	??_contra,f
  2344  06D6  2ED3               	goto	u1017
  2345  06D7  0BDA               	decfsz	??_contra+1,f
  2346  06D8  2ED3               	goto	u1017
  2347  06D9  3200               	nop2
  2348  06DA                     l2654:
  2349                           
  2350                           ;main.c: 136:                 combinacion[Auxiliar] = "3";
  2351  06DA  0140               	movlb	0	; select bank0
  2352  06DB  3543               	lslf	_Auxiliar,w
  2353  06DC  3E45               	addlw	(low (_combinacion| 0))& (0+255)
  2354  06DD  0086               	movwf	6
  2355  06DE  0187               	clrf	7
  2356  06DF  3082               	movlw	low (STR_3| (0+32768))
  2357  06E0  3FC0               	movwi [0]fsr1
  2358  06E1  3088               	movlw	high (STR_3| (0+32768))
  2359  06E2  3FC1               	movwi [1]fsr1
  2360  06E3                     l2656:
  2361                           
  2362                           ;main.c: 137:                 Auxiliar += 1;
  2363  06E3  3001               	movlw	1
  2364  06E4  07C3               	addwf	_Auxiliar,f
  2365  06E5  3000               	movlw	0
  2366  06E6  3DC4               	addwfc	_Auxiliar+1,f
  2367  06E7                     l2658:
  2368                           
  2369                           ;main.c: 141:             if(Auxiliar == 5)
  2370  06E7  3005               	movlw	5
  2371  06E8  0643               	xorwf	_Auxiliar,w
  2372  06E9  0444               	iorwf	_Auxiliar+1,w
  2373  06EA  1D03               	btfss	3,2
  2374  06EB  2EED               	goto	u881
  2375  06EC  2EEE               	goto	u880
  2376  06ED                     u881:
  2377  06ED  2FE3               	goto	l689
  2378  06EE                     u880:
  2379  06EE                     l2660:
  2380                           
  2381                           ;main.c: 142:             {;main.c: 143:                 Auxiliar = 0;
  2382  06EE  01C3               	clrf	_Auxiliar
  2383  06EF  01C4               	clrf	_Auxiliar+1
  2384  06F0                     l2662:
  2385                           
  2386                           ;main.c: 144:                 Estado = 3;
  2387  06F0  3003               	movlw	3
  2388  06F1  00C1               	movwf	_Estado
  2389  06F2  3000               	movlw	0
  2390  06F3  00C2               	movwf	_Estado+1
  2391  06F4  2FE3               	goto	l689
  2392  06F5                     l2664:
  2393                           
  2394                           ;main.c: 151:             for(int i = 0; i <= 4; i++)
  2395  06F5  01DF               	clrf	contra@i_1209
  2396  06F6  01E0               	clrf	contra@i_1209+1
  2397  06F7                     l2670:
  2398                           
  2399                           ;main.c: 152:             {;main.c: 153:                 if(Contrasena[i] == combinacion
      +                          [i])
  2400  06F7  0140               	movlb	0	; select bank0
  2401  06F8  355F               	lslf	contra@i_1209,w
  2402  06F9  3E45               	addlw	(low (_combinacion| 0))& (0+255)
  2403  06FA  0086               	movwf	6
  2404  06FB  0187               	clrf	7
  2405  06FC  3F40               	moviw [0]fsr1
  2406  06FD  00D9               	movwf	??_contra
  2407  06FE  3F41               	moviw [1]fsr1
  2408  06FF  00DA               	movwf	??_contra+1
  2409  0700  355F               	lslf	contra@i_1209,w
  2410  0701  3E4F               	addlw	(low (_Contrasena| 0))& (0+255)
  2411  0702  0086               	movwf	6
  2412  0703  0187               	clrf	7
  2413  0704  3F40               	moviw [0]fsr1
  2414  0705  00DB               	movwf	??_contra+2
  2415  0706  3F41               	moviw [1]fsr1
  2416  0707  00DC               	movwf	??_contra+3
  2417  0708  085A               	movf	??_contra+1,w
  2418  0709  065C               	xorwf	??_contra+3,w
  2419  070A  1D03               	skipz
  2420  070B  2F0E               	goto	u895
  2421  070C  0859               	movf	??_contra,w
  2422  070D  065B               	xorwf	??_contra+2,w
  2423  070E                     u895:
  2424  070E  1D03               	skipz
  2425  070F  2F11               	goto	u891
  2426  0710  2F12               	goto	u890
  2427  0711                     u891:
  2428  0711  2F17               	goto	l2674
  2429  0712                     u890:
  2430  0712                     l2672:
  2431                           
  2432                           ;main.c: 154:                 {;main.c: 155:                     Auxiliar += 1;
  2433  0712  3001               	movlw	1
  2434  0713  07C3               	addwf	_Auxiliar,f
  2435  0714  3000               	movlw	0
  2436  0715  3DC4               	addwfc	_Auxiliar+1,f
  2437                           
  2438                           ;main.c: 156:                 }
  2439  0716  2F1A               	goto	l2676
  2440  0717                     l2674:
  2441                           
  2442                           ;main.c: 158:                 {;main.c: 159:                     Auxiliar = 0;
  2443  0717  01C3               	clrf	_Auxiliar
  2444  0718  01C4               	clrf	_Auxiliar+1
  2445                           
  2446                           ;main.c: 160:                     break;
  2447  0719  2F2B               	goto	l2678
  2448  071A                     l2676:
  2449                           
  2450                           ;main.c: 162:             }
  2451  071A  3001               	movlw	1
  2452  071B  07DF               	addwf	contra@i_1209,f
  2453  071C  3000               	movlw	0
  2454  071D  3DE0               	addwfc	contra@i_1209+1,f
  2455  071E  0860               	movf	contra@i_1209+1,w
  2456  071F  3A80               	xorlw	128
  2457  0720  00D9               	movwf	??_contra
  2458  0721  3080               	movlw	128
  2459  0722  0259               	subwf	??_contra,w
  2460  0723  1D03               	skipz
  2461  0724  2F27               	goto	u905
  2462  0725  3005               	movlw	5
  2463  0726  025F               	subwf	contra@i_1209,w
  2464  0727                     u905:
  2465  0727  1C03               	skipc
  2466  0728  2F2A               	goto	u901
  2467  0729  2F2B               	goto	u900
  2468  072A                     u901:
  2469  072A  2EF7               	goto	l2670
  2470  072B                     u900:
  2471  072B                     l2678:
  2472                           
  2473                           ;main.c: 164:             if(Auxiliar == 5)
  2474  072B  3005               	movlw	5
  2475  072C  0140               	movlb	0	; select bank0
  2476  072D  0643               	xorwf	_Auxiliar,w
  2477  072E  0444               	iorwf	_Auxiliar+1,w
  2478  072F  1D03               	btfss	3,2
  2479  0730  2F32               	goto	u911
  2480  0731  2F33               	goto	u910
  2481  0732                     u911:
  2482  0732  2F75               	goto	l2706
  2483  0733                     u910:
  2484  0733                     l2680:
  2485                           
  2486                           ;main.c: 165:             {;main.c: 166:                 LCD_Set_Cursor(3, 1);
  2487  0733  01F6               	clrf	LCD_Set_Cursor@COL
  2488  0734  0AF6               	incf	LCD_Set_Cursor@COL,f
  2489  0735  3003               	movlw	3
  2490  0736  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2491                           
  2492                           ;main.c: 167:                 LCD_Write_String("Cont correcta");
  2493  0739  3045               	movlw	low (STR_14| (0+32768))
  2494  073A  00F6               	movwf	LCD_Write_String@Str
  2495  073B  3088               	movlw	high (STR_14| (0+32768))
  2496  073C  00F7               	movwf	LCD_Write_String@Str+1
  2497  073D  3184  2424  3185   	fcall	_LCD_Write_String
  2498  0740                     l2682:
  2499                           
  2500                           ;main.c: 168:                 combinacion[0] = "0";
  2501  0740  307C               	movlw	low (STR_6| (0+32768))
  2502  0741  0140               	movlb	0	; select bank0
  2503  0742  00C5               	movwf	_combinacion
  2504  0743  3088               	movlw	high (STR_6| (0+32768))
  2505  0744  00C6               	movwf	_combinacion+1
  2506  0745                     l2684:
  2507                           
  2508                           ;main.c: 169:                 combinacion[1] = "0";
  2509  0745  307C               	movlw	low (STR_6| (0+32768))
  2510  0746  00C7               	movwf	low ((_combinacion| 0+2))
  2511  0747  3088               	movlw	high (STR_6| (0+32768))
  2512  0748  00C8               	movwf	(low ((_combinacion| 0+2))+1)
  2513  0749                     l2686:
  2514                           
  2515                           ;main.c: 170:                 combinacion[2] = "0";
  2516  0749  307C               	movlw	low (STR_6| (0+32768))
  2517  074A  00C9               	movwf	low ((_combinacion| 0+4))
  2518  074B  3088               	movlw	high (STR_6| (0+32768))
  2519  074C  00CA               	movwf	(low ((_combinacion| 0+4))+1)
  2520  074D                     l2688:
  2521                           
  2522                           ;main.c: 171:                 combinacion[3] = "0";
  2523  074D  307C               	movlw	low (STR_6| (0+32768))
  2524  074E  00CB               	movwf	low ((_combinacion| 0+6))
  2525  074F  3088               	movlw	high (STR_6| (0+32768))
  2526  0750  00CC               	movwf	(low ((_combinacion| 0+6))+1)
  2527  0751                     l2690:
  2528  0751  131A               	bcf	26,6	;volatile
  2529  0752                     l2692:
  2530                           
  2531                           ;main.c: 173:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  2532  0752  300B               	movlw	11
  2533  0753  0140               	movlb	0	; select bank0
  2534  0754  00DA               	movwf	??_contra+1
  2535  0755  3026               	movlw	38
  2536  0756  00D9               	movwf	??_contra
  2537  0757  305D               	movlw	93
  2538  0758                     u1027:
  2539  0758  0B89               	decfsz	9,f
  2540  0759  2F58               	goto	u1027
  2541  075A  0BD9               	decfsz	??_contra,f
  2542  075B  2F58               	goto	u1027
  2543  075C  0BDA               	decfsz	??_contra+1,f
  2544  075D  2F58               	goto	u1027
  2545  075E  3200               	nop2
  2546  075F                     l2694:
  2547                           
  2548                           ;main.c: 174:                 LCD_Clear();
  2549  075F  3183  2387  3185   	fcall	_LCD_Clear
  2550  0762                     l2696:
  2551                           
  2552                           ;main.c: 175:                 Auxiliar = 0;
  2553  0762  0140               	movlb	0	; select bank0
  2554  0763  01C3               	clrf	_Auxiliar
  2555  0764  01C4               	clrf	_Auxiliar+1
  2556  0765                     l2698:
  2557                           
  2558                           ;main.c: 176:                 intentos = 0;
  2559  0765  01BF               	clrf	_intentos
  2560  0766  01C0               	clrf	_intentos+1
  2561  0767                     l2700:
  2562                           
  2563                           ;main.c: 177:                 LCD_Set_Cursor(1, 1);
  2564  0767  01F6               	clrf	LCD_Set_Cursor@COL
  2565  0768  0AF6               	incf	LCD_Set_Cursor@COL,f
  2566  0769  3001               	movlw	1
  2567  076A  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2568  076D                     l2702:
  2569                           
  2570                           ;main.c: 178:                 LCD_Write_String("Contrasena");
  2571  076D  305F               	movlw	low (STR_36| (0+32768))
  2572  076E  00F6               	movwf	LCD_Write_String@Str
  2573  076F  3088               	movlw	high (STR_36| (0+32768))
  2574  0770  00F7               	movwf	LCD_Write_String@Str+1
  2575  0771  3184  2424  3185   	fcall	_LCD_Write_String
  2576  0774  2E76               	goto	l2628
  2577  0775                     l2706:
  2578                           
  2579                           ;main.c: 183:             {;main.c: 184:                 LCD_Set_Cursor(3, 1);
  2580  0775  01F6               	clrf	LCD_Set_Cursor@COL
  2581  0776  0AF6               	incf	LCD_Set_Cursor@COL,f
  2582  0777  3003               	movlw	3
  2583  0778  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2584                           
  2585                           ;main.c: 185:                 LCD_Write_String("Cont incorrecta");
  2586  077B  3035               	movlw	low (STR_20| (0+32768))
  2587  077C  00F6               	movwf	LCD_Write_String@Str
  2588  077D  3088               	movlw	high (STR_20| (0+32768))
  2589  077E  00F7               	movwf	LCD_Write_String@Str+1
  2590  077F  3184  2424  3185   	fcall	_LCD_Write_String
  2591  0782                     l2708:
  2592                           
  2593                           ;main.c: 186:                 combinacion[0] = "0";
  2594  0782  307C               	movlw	low (STR_6| (0+32768))
  2595  0783  0140               	movlb	0	; select bank0
  2596  0784  00C5               	movwf	_combinacion
  2597  0785  3088               	movlw	high (STR_6| (0+32768))
  2598  0786  00C6               	movwf	_combinacion+1
  2599  0787                     l2710:
  2600                           
  2601                           ;main.c: 187:                 combinacion[1] = "0";
  2602  0787  307C               	movlw	low (STR_6| (0+32768))
  2603  0788  00C7               	movwf	low ((_combinacion| 0+2))
  2604  0789  3088               	movlw	high (STR_6| (0+32768))
  2605  078A  00C8               	movwf	(low ((_combinacion| 0+2))+1)
  2606  078B                     l2712:
  2607                           
  2608                           ;main.c: 188:                 combinacion[2] = "0";
  2609  078B  307C               	movlw	low (STR_6| (0+32768))
  2610  078C  00C9               	movwf	low ((_combinacion| 0+4))
  2611  078D  3088               	movlw	high (STR_6| (0+32768))
  2612  078E  00CA               	movwf	(low ((_combinacion| 0+4))+1)
  2613  078F                     l2714:
  2614                           
  2615                           ;main.c: 189:                 combinacion[3] = "0";
  2616  078F  307C               	movlw	low (STR_6| (0+32768))
  2617  0790  00CB               	movwf	low ((_combinacion| 0+6))
  2618  0791  3088               	movlw	high (STR_6| (0+32768))
  2619  0792  00CC               	movwf	(low ((_combinacion| 0+6))+1)
  2620  0793                     l2716:
  2621                           
  2622                           ;main.c: 190:                 intentos++;
  2623  0793  3001               	movlw	1
  2624  0794  07BF               	addwf	_intentos,f
  2625  0795  3000               	movlw	0
  2626  0796  3DC0               	addwfc	_intentos+1,f
  2627  0797                     l2718:
  2628                           
  2629                           ;main.c: 191:                 Auxiliar = 0;
  2630  0797  01C3               	clrf	_Auxiliar
  2631  0798  01C4               	clrf	_Auxiliar+1
  2632  0799                     l2720:
  2633                           
  2634                           ;main.c: 192:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  2635  0799  300B               	movlw	11
  2636  079A  0140               	movlb	0	; select bank0
  2637  079B  00DA               	movwf	??_contra+1
  2638  079C  3026               	movlw	38
  2639  079D  00D9               	movwf	??_contra
  2640  079E  305D               	movlw	93
  2641  079F                     u1037:
  2642  079F  0B89               	decfsz	9,f
  2643  07A0  2F9F               	goto	u1037
  2644  07A1  0BD9               	decfsz	??_contra,f
  2645  07A2  2F9F               	goto	u1037
  2646  07A3  0BDA               	decfsz	??_contra+1,f
  2647  07A4  2F9F               	goto	u1037
  2648  07A5  3200               	nop2
  2649  07A6                     l2722:
  2650                           
  2651                           ;main.c: 193:                 LCD_Clear();
  2652  07A6  3183  2387  3185   	fcall	_LCD_Clear
  2653  07A9                     l2724:
  2654                           
  2655                           ;main.c: 194:                 if(intentos == 2)
  2656  07A9  3002               	movlw	2
  2657  07AA  0140               	movlb	0	; select bank0
  2658  07AB  063F               	xorwf	_intentos,w
  2659  07AC  0440               	iorwf	_intentos+1,w
  2660  07AD  1D03               	btfss	3,2
  2661  07AE  2FB0               	goto	u921
  2662  07AF  2FB1               	goto	u920
  2663  07B0                     u921:
  2664  07B0  2FC1               	goto	l2730
  2665  07B1                     u920:
  2666  07B1                     l2726:
  2667                           
  2668                           ;main.c: 197:                     {;main.c: 198:                         LCD_Set_Cursor(
      +                          3, 1);
  2669  07B1  01F6               	clrf	LCD_Set_Cursor@COL
  2670  07B2  0AF6               	incf	LCD_Set_Cursor@COL,f
  2671  07B3  3003               	movlw	3
  2672  07B4  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2673                           
  2674                           ;main.c: 199:                         LCD_Write_String("Bloqueo de seguridad");
  2675  07B7  3020               	movlw	low (STR_25| (0+32768))
  2676  07B8  00F6               	movwf	LCD_Write_String@Str
  2677  07B9  3088               	movlw	high (STR_25| (0+32768))
  2678  07BA  00F7               	movwf	LCD_Write_String@Str+1
  2679  07BB  3184  2424  3185   	fcall	_LCD_Write_String
  2680  07BE                     l2728:
  2681  07BE  0140               	movlb	0	; select bank0
  2682  07BF  171A               	bsf	26,6	;volatile
  2683  07C0  2FB1               	goto	l2726
  2684  07C1                     l2730:
  2685                           
  2686                           ;main.c: 204:                 LCD_Set_Cursor(1, 1);
  2687  07C1  01F6               	clrf	LCD_Set_Cursor@COL
  2688  07C2  0AF6               	incf	LCD_Set_Cursor@COL,f
  2689  07C3  3001               	movlw	1
  2690  07C4  3184  2460  3185   	fcall	_LCD_Set_Cursor
  2691                           
  2692                           ;main.c: 205:                 LCD_Write_String("Cotrasena");
  2693  07C7  306A               	movlw	low (STR_26| (0+32768))
  2694  07C8  00F6               	movwf	LCD_Write_String@Str
  2695  07C9  3088               	movlw	high (STR_26| (0+32768))
  2696  07CA  00F7               	movwf	LCD_Write_String@Str+1
  2697  07CB  3184  2424  3185   	fcall	_LCD_Write_String
  2698  07CE  2E17               	goto	l2600
  2699  07CF                     l2736:
  2700                           
  2701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 1, Range of values is 0 to 0
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte            4     3 (average)
  2707                           ; direct_byte            8     6 (fixed)
  2708                           ; jumptable            260     6 (fixed)
  2709                           ;	Chosen strategy is simple_byte
  2710  07CF  0140               	movlb	0	; select bank0
  2711  07D0  0842               	movf	_Estado+1,w
  2712  07D1  3A00               	xorlw	0	; case 0
  2713  07D2  1903               	skipnz
  2714  07D3  2FD5               	goto	l2860
  2715  07D4  2FE3               	goto	l689
  2716  07D5                     l2860:
  2717                           
  2718                           ; Switch size 1, requested type "simple"
  2719                           ; Number of cases is 4, Range of values is 0 to 3
  2720                           ; switch strategies available:
  2721                           ; Name         Instructions Cycles
  2722                           ; simple_byte           13     7 (average)
  2723                           ; direct_byte           14     6 (fixed)
  2724                           ; jumptable            260     6 (fixed)
  2725                           ;	Chosen strategy is simple_byte
  2726  07D5  0841               	movf	_Estado,w
  2727  07D6  3A00               	xorlw	0	; case 0
  2728  07D7  1903               	skipnz
  2729  07D8  2D31               	goto	l647
  2730  07D9  3A01               	xorlw	1	; case 1
  2731  07DA  1903               	skipnz
  2732  07DB  2D99               	goto	l2562
  2733  07DC  3A03               	xorlw	3	; case 2
  2734  07DD  1903               	skipnz
  2735  07DE  2E7A               	goto	l666
  2736  07DF  3A01               	xorlw	1	; case 3
  2737  07E0  1903               	skipnz
  2738  07E1  2EF5               	goto	l2664
  2739  07E2  2FE3               	goto	l689
  2740  07E3                     l689:
  2741  07E3  0008               	return
  2742  07E4                     __end_of_contra:
  2743                           
  2744                           	psect	text2
  2745  0424                     __ptext2:	
  2746 ;; *************** function _LCD_Write_String *****************
  2747 ;; Defined at:
  2748 ;;		line 134 in file "I2C_LCD.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  Str             2    6[COMMON] PTR unsigned char 
  2751 ;;		 -> STR_44(10), STR_43(10), STR_42(21), STR_37(16), 
  2752 ;;		 -> STR_36(11), STR_31(14), STR_27(8), STR_26(10), 
  2753 ;;		 -> STR_25(21), STR_20(16), STR_19(12), STR_14(14), 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  i               2    9[COMMON] int 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2765 ;;      Params:         2       0       0       0       0       0       0       0
  2766 ;;      Locals:         2       0       0       0       0       0       0       0
  2767 ;;      Temps:          1       0       0       0       0       0       0       0
  2768 ;;      Totals:         5       0       0       0       0       0       0       0
  2769 ;;Total ram usage:        5 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 5
  2772 ;; This function calls:
  2773 ;;		_LCD_Write_Char
  2774 ;; This function is called by:
  2775 ;;		_contra
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function _LCD_Write_String
  2782  0424                     _LCD_Write_String:
  2783  0424                     l2520:	
  2784                           ;incstack = 0
  2785                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2786                           
  2787                           
  2788                           ;I2C_LCD.c: 134: void LCD_Write_String(char* Str);I2C_LCD.c: 135: {;I2C_LCD.c: 136:     
      +                          for(int i=0; Str[i]!='\0'; i++)
  2789  0424  01F9               	clrf	LCD_Write_String@i
  2790  0425  01FA               	clrf	LCD_Write_String@i+1
  2791  0426  2C35               	goto	l2526
  2792  0427                     l2522:
  2793                           
  2794                           ;I2C_LCD.c: 137:        LCD_Write_Char(Str[i]);
  2795  0427  0876               	movf	LCD_Write_String@Str,w
  2796  0428  0779               	addwf	LCD_Write_String@i,w
  2797  0429  0084               	movwf	4
  2798  042A  0877               	movf	LCD_Write_String@Str+1,w
  2799  042B  3D7A               	addwfc	LCD_Write_String@i+1,w
  2800  042C  0085               	movwf	5
  2801  042D  0800               	movf	0,w	;code access
  2802  042E  3184  240F  3184   	fcall	_LCD_Write_Char
  2803  0431                     l2524:
  2804  0431  3001               	movlw	1
  2805  0432  07F9               	addwf	LCD_Write_String@i,f
  2806  0433  3000               	movlw	0
  2807  0434  3DFA               	addwfc	LCD_Write_String@i+1,f
  2808  0435                     l2526:
  2809  0435  0876               	movf	LCD_Write_String@Str,w
  2810  0436  0779               	addwf	LCD_Write_String@i,w
  2811  0437  0084               	movwf	4
  2812  0438  0877               	movf	LCD_Write_String@Str+1,w
  2813  0439  3D7A               	addwfc	LCD_Write_String@i+1,w
  2814  043A  0085               	movwf	5
  2815  043B  0012               	moviw fsr0++
  2816  043C  1D03               	btfss	3,2
  2817  043D  2C3F               	goto	u751
  2818  043E  2C40               	goto	u750
  2819  043F                     u751:
  2820  043F  2C27               	goto	l2522
  2821  0440                     u750:
  2822  0440                     l798:
  2823  0440  0008               	return
  2824  0441                     __end_of_LCD_Write_String:
  2825                           
  2826                           	psect	text3
  2827  040F                     __ptext3:	
  2828 ;; *************** function _LCD_Write_Char *****************
  2829 ;; Defined at:
  2830 ;;		line 127 in file "I2C_LCD.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  Data            1    wreg     unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  Data            1    5[COMMON] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0, pclath, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2844 ;;      Params:         0       0       0       0       0       0       0       0
  2845 ;;      Locals:         1       0       0       0       0       0       0       0
  2846 ;;      Temps:          1       0       0       0       0       0       0       0
  2847 ;;      Totals:         2       0       0       0       0       0       0       0
  2848 ;;Total ram usage:        2 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 4
  2851 ;; This function calls:
  2852 ;;		_LCD_Write_4Bit
  2853 ;; This function is called by:
  2854 ;;		_LCD_Write_String
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _LCD_Write_Char
  2860  040F                     _LCD_Write_Char:
  2861                           
  2862                           ;incstack = 0
  2863                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2864                           ;LCD_Write_Char@Data stored from wreg
  2865  040F  00F5               	movwf	LCD_Write_Char@Data
  2866  0410                     l2500:
  2867                           
  2868                           ;I2C_LCD.c: 127: void LCD_Write_Char(char Data);I2C_LCD.c: 128: {;I2C_LCD.c: 129:   RS =
      +                           1;
  2869  0410  01FC               	clrf	_RS
  2870  0411  0AFC               	incf	_RS,f
  2871  0412                     l2502:
  2872                           
  2873                           ;I2C_LCD.c: 130:   LCD_Write_4Bit(Data & 0xF0);
  2874  0412  0875               	movf	LCD_Write_Char@Data,w
  2875  0413  39F0               	andlw	240
  2876  0414  3183  23D3  3184   	fcall	_LCD_Write_4Bit
  2877                           
  2878                           ;I2C_LCD.c: 131:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2879  0417  0875               	movf	LCD_Write_Char@Data,w
  2880  0418  00F4               	movwf	??_LCD_Write_Char
  2881  0419  3003               	movlw	3
  2882  041A                     u745:
  2883  041A  35F4               	lslf	??_LCD_Write_Char,f
  2884  041B  3EFF               	addlw	-1
  2885  041C  1D03               	skipz
  2886  041D  2C1A               	goto	u745
  2887  041E  3574               	lslf	??_LCD_Write_Char,w
  2888  041F  39F0               	andlw	240
  2889  0420  3183  23D3  3184   	fcall	_LCD_Write_4Bit
  2890  0423                     l792:
  2891  0423  0008               	return
  2892  0424                     __end_of_LCD_Write_Char:
  2893                           
  2894                           	psect	text4
  2895  0460                     __ptext4:	
  2896 ;; *************** function _LCD_Set_Cursor *****************
  2897 ;; Defined at:
  2898 ;;		line 140 in file "I2C_LCD.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  ROW             1    wreg     unsigned char 
  2901 ;;  COL             1    6[COMMON] unsigned char 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  ROW             1    9[COMMON] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2913 ;;      Params:         1       0       0       0       0       0       0       0
  2914 ;;      Locals:         1       0       0       0       0       0       0       0
  2915 ;;      Temps:          2       0       0       0       0       0       0       0
  2916 ;;      Totals:         4       0       0       0       0       0       0       0
  2917 ;;Total ram usage:        4 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 5
  2920 ;; This function calls:
  2921 ;;		_LCD_CMD
  2922 ;; This function is called by:
  2923 ;;		_contra
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function _LCD_Set_Cursor
  2930  0460                     _LCD_Set_Cursor:
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2934                           ;LCD_Set_Cursor@ROW stored from wreg
  2935  0460  00F9               	movwf	LCD_Set_Cursor@ROW
  2936  0461                     l2504:
  2937                           
  2938                           ;I2C_LCD.c: 140: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 14
      +                          1: {;I2C_LCD.c: 142:   switch(ROW)
  2939  0461  2C7A               	goto	l2514
  2940  0462                     l2506:
  2941                           
  2942                           ;I2C_LCD.c: 145:       LCD_CMD(0xC0 + COL-1);
  2943  0462  0876               	movf	LCD_Set_Cursor@COL,w
  2944  0463  3EBF               	addlw	191
  2945  0464  3183  23E7  3184   	fcall	_LCD_CMD
  2946                           
  2947                           ;I2C_LCD.c: 146:       break;
  2948  0467  2C8D               	goto	l807
  2949  0468                     l2508:
  2950                           
  2951                           ;I2C_LCD.c: 148:       LCD_CMD(0x94 + COL-1);
  2952  0468  0876               	movf	LCD_Set_Cursor@COL,w
  2953  0469  3E93               	addlw	147
  2954  046A  3183  23E7  3184   	fcall	_LCD_CMD
  2955                           
  2956                           ;I2C_LCD.c: 149:       break;
  2957  046D  2C8D               	goto	l807
  2958  046E                     l2510:
  2959                           
  2960                           ;I2C_LCD.c: 151:       LCD_CMD(0xD4 + COL-1);
  2961  046E  0876               	movf	LCD_Set_Cursor@COL,w
  2962  046F  3ED3               	addlw	211
  2963  0470  3183  23E7  3184   	fcall	_LCD_CMD
  2964                           
  2965                           ;I2C_LCD.c: 152:       break;
  2966  0473  2C8D               	goto	l807
  2967  0474                     l2512:
  2968                           
  2969                           ;I2C_LCD.c: 155:       LCD_CMD(0x80 + COL-1);
  2970  0474  0876               	movf	LCD_Set_Cursor@COL,w
  2971  0475  3E7F               	addlw	127
  2972  0476  3183  23E7  3184   	fcall	_LCD_CMD
  2973                           
  2974                           ;I2C_LCD.c: 156:   }
  2975  0479  2C8D               	goto	l807
  2976  047A                     l2514:
  2977  047A  0879               	movf	LCD_Set_Cursor@ROW,w
  2978  047B  00F7               	movwf	??_LCD_Set_Cursor
  2979  047C  01F8               	clrf	??_LCD_Set_Cursor+1
  2980                           
  2981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2982                           ; Switch size 1, requested type "simple"
  2983                           ; Number of cases is 1, Range of values is 0 to 0
  2984                           ; switch strategies available:
  2985                           ; Name         Instructions Cycles
  2986                           ; simple_byte            4     3 (average)
  2987                           ; direct_byte            8     6 (fixed)
  2988                           ; jumptable            260     6 (fixed)
  2989                           ;	Chosen strategy is simple_byte
  2990  047D  0878               	movf	??_LCD_Set_Cursor+1,w
  2991  047E  3A00               	xorlw	0	; case 0
  2992  047F  1903               	skipnz
  2993  0480  2C82               	goto	l2862
  2994  0481  2C74               	goto	l2512
  2995  0482                     l2862:
  2996                           
  2997                           ; Switch size 1, requested type "simple"
  2998                           ; Number of cases is 3, Range of values is 2 to 4
  2999                           ; switch strategies available:
  3000                           ; Name         Instructions Cycles
  3001                           ; simple_byte           10     6 (average)
  3002                           ; direct_byte           15     9 (fixed)
  3003                           ; jumptable            263     9 (fixed)
  3004                           ;	Chosen strategy is simple_byte
  3005  0482  0877               	movf	??_LCD_Set_Cursor,w
  3006  0483  3A02               	xorlw	2	; case 2
  3007  0484  1903               	skipnz
  3008  0485  2C62               	goto	l2506
  3009  0486  3A01               	xorlw	1	; case 3
  3010  0487  1903               	skipnz
  3011  0488  2C68               	goto	l2508
  3012  0489  3A07               	xorlw	7	; case 4
  3013  048A  1903               	skipnz
  3014  048B  2C6E               	goto	l2510
  3015  048C  2C74               	goto	l2512
  3016  048D                     l807:
  3017  048D  0008               	return
  3018  048E                     __end_of_LCD_Set_Cursor:
  3019                           
  3020                           	psect	text5
  3021  0387                     __ptext5:	
  3022 ;; *************** function _LCD_Clear *****************
  3023 ;; Defined at:
  3024 ;;		line 183 in file "I2C_LCD.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3038 ;;      Params:         0       0       0       0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0
  3041 ;;      Totals:         0       0       0       0       0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 5
  3045 ;; This function calls:
  3046 ;;		_LCD_CMD
  3047 ;; This function is called by:
  3048 ;;		_contra
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function _LCD_Clear
  3054  0387                     _LCD_Clear:
  3055  0387                     l2528:	
  3056                           ;incstack = 0
  3057                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3058                           
  3059                           
  3060                           ;I2C_LCD.c: 185:   LCD_CMD(0x01);
  3061  0387  3001               	movlw	1
  3062  0388  3183  23E7  3183   	fcall	_LCD_CMD
  3063  038B                     l2530:
  3064                           
  3065                           ;I2C_LCD.c: 186:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  3066  038B  300D               	movlw	13
  3067  038C                     u1047:
  3068  038C  0B89               	decfsz	9,f
  3069  038D  2B8C               	goto	u1047
  3070  038E  0000               	nop
  3071  038F                     l822:
  3072  038F  0008               	return
  3073  0390                     __end_of_LCD_Clear:
  3074                           
  3075                           	psect	text6
  3076  03A7                     __ptext6:	
  3077 ;; *************** function _SYSTEM_Initialize *****************
  3078 ;; Defined at:
  3079 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3093 ;;      Params:         0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 1
  3100 ;; This function calls:
  3101 ;;		_I2C1_Initialize
  3102 ;;		_OSCILLATOR_Initialize
  3103 ;;		_PIN_MANAGER_Initialize
  3104 ;;		_WDT_Initialize
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _SYSTEM_Initialize
  3112  03A7                     _SYSTEM_Initialize:
  3113  03A7                     l1568:	
  3114                           ;incstack = 0
  3115                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3116                           
  3117                           
  3118                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  3119  03A7  3183  237E  3183   	fcall	_I2C1_Initialize
  3120                           
  3121                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3122  03AA  3184  248E  3183   	fcall	_PIN_MANAGER_Initialize
  3123                           
  3124                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3125  03AD  3183  236C  3183   	fcall	_OSCILLATOR_Initialize
  3126  03B0                     l1570:
  3127                           
  3128                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3129  03B0  3183  235D  3183   	fcall	_WDT_Initialize
  3130  03B3                     l551:
  3131  03B3  0008               	return
  3132  03B4                     __end_of_SYSTEM_Initialize:
  3133                           
  3134                           	psect	text7
  3135  035D                     __ptext7:	
  3136 ;; *************** function _WDT_Initialize *****************
  3137 ;; Defined at:
  3138 ;;		line 69 in file "mcc_generated_files/mcc.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		status,2
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3152 ;;      Params:         0       0       0       0       0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0
  3155 ;;      Totals:         0       0       0       0       0       0       0       0
  3156 ;;Total ram usage:        0 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_SYSTEM_Initialize
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _WDT_Initialize
  3167  035D                     _WDT_Initialize:
  3168  035D                     l1432:	
  3169                           ;incstack = 0
  3170                           ; Regs used in _WDT_Initialize: [status,2]
  3171                           
  3172                           
  3173                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x00;
  3174  035D  0150               	movlb	16	; select bank16
  3175  035E  018C               	clrf	12	;volatile
  3176  035F                     l557:
  3177  035F  0008               	return
  3178  0360                     __end_of_WDT_Initialize:
  3179                           
  3180                           	psect	text8
  3181  048E                     __ptext8:	
  3182 ;; *************** function _PIN_MANAGER_Initialize *****************
  3183 ;; Defined at:
  3184 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3198 ;;      Params:         0       0       0       0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_SYSTEM_Initialize
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _PIN_MANAGER_Initialize
  3213  048E                     _PIN_MANAGER_Initialize:
  3214  048E                     l1404:	
  3215                           ;incstack = 0
  3216                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3217                           
  3218                           
  3219                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3220  048E  0140               	movlb	0	; select bank0
  3221  048F  0198               	clrf	24	;volatile
  3222                           
  3223                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3224  0490  0199               	clrf	25	;volatile
  3225                           
  3226                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3227  0491  019A               	clrf	26	;volatile
  3228  0492                     l1406:
  3229                           
  3230                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  3231  0492  303F               	movlw	63
  3232  0493  0092               	movwf	18	;volatile
  3233  0494                     l1408:
  3234                           
  3235                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  3236  0494  30F0               	movlw	240
  3237  0495  0093               	movwf	19	;volatile
  3238  0496                     l1410:
  3239                           
  3240                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3241  0496  30BF               	movlw	191
  3242  0497  0094               	movwf	20	;volatile
  3243  0498                     l1412:
  3244                           
  3245                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x8C;
  3246  0498  308C               	movlw	140
  3247  0499  017E               	movlb	62	; select bank62
  3248  049A  00CE               	movwf	78	;volatile
  3249  049B                     l1414:
  3250                           
  3251                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xA0;
  3252  049B  30A0               	movlw	160
  3253  049C  00C3               	movwf	67	;volatile
  3254  049D                     l1416:
  3255                           
  3256                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  3257  049D  3037               	movlw	55
  3258  049E  00B8               	movwf	56	;volatile
  3259                           
  3260                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3261  049F  01C4               	clrf	68	;volatile
  3262                           
  3263                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3264  04A0  01B9               	clrf	57	;volatile
  3265  04A1                     l1418:
  3266                           
  3267                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x10;
  3268  04A1  3010               	movlw	16
  3269  04A2  00CF               	movwf	79	;volatile
  3270  04A3                     l1420:
  3271                           
  3272                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  3273  04A3  01BA               	clrf	58	;volatile
  3274  04A4                     l1422:
  3275                           
  3276                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  3277  04A4  01C5               	clrf	69	;volatile
  3278  04A5                     l1424:
  3279                           
  3280                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  3281  04A5  01D0               	clrf	80	;volatile
  3282                           
  3283                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  3284  04A6  3037               	movlw	55
  3285  04A7  00BB               	movwf	59	;volatile
  3286                           
  3287                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  3288  04A8  30F0               	movlw	240
  3289  04A9  00C6               	movwf	70	;volatile
  3290                           
  3291                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  3292  04AA  30FF               	movlw	255
  3293  04AB  00D1               	movwf	81	;volatile
  3294                           
  3295                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  3296  04AC  303F               	movlw	63
  3297  04AD  00BC               	movwf	60	;volatile
  3298                           
  3299                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  3300  04AE  30F0               	movlw	240
  3301  04AF  00C7               	movwf	71	;volatile
  3302                           
  3303                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  3304  04B0  30FF               	movlw	255
  3305  04B1  00D2               	movwf	82	;volatile
  3306                           
  3307                           ;mcc_generated_files/pin_manager.c: 113:     SSP1CLKPPS = 0x0E;
  3308  04B2  300E               	movlw	14
  3309  04B3  017D               	movlb	61	; select bank61
  3310  04B4  00C5               	movwf	69	;volatile
  3311                           
  3312                           ;mcc_generated_files/pin_manager.c: 114:     RB6PPS = 0x07;
  3313  04B5  3007               	movlw	7
  3314  04B6  017E               	movlb	62	; select bank62
  3315  04B7  009E               	movwf	30	;volatile
  3316                           
  3317                           ;mcc_generated_files/pin_manager.c: 115:     RB4PPS = 0x08;
  3318  04B8  3008               	movlw	8
  3319  04B9  009C               	movwf	28	;volatile
  3320                           
  3321                           ;mcc_generated_files/pin_manager.c: 116:     SSP1DATPPS = 0x0C;
  3322  04BA  300C               	movlw	12
  3323  04BB  017D               	movlb	61	; select bank61
  3324  04BC  00C6               	movwf	70	;volatile
  3325  04BD                     l610:
  3326  04BD  0008               	return
  3327  04BE                     __end_of_PIN_MANAGER_Initialize:
  3328                           
  3329                           	psect	text9
  3330  036C                     __ptext9:	
  3331 ;; *************** function _OSCILLATOR_Initialize *****************
  3332 ;; Defined at:
  3333 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3347 ;;      Params:         0       0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_SYSTEM_Initialize
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _OSCILLATOR_Initialize
  3362  036C                     _OSCILLATOR_Initialize:
  3363  036C                     l1426:	
  3364                           ;incstack = 0
  3365                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3366                           
  3367                           
  3368                           ;mcc_generated_files/mcc.c: 62:     OSCEN = 0x00;
  3369  036C  0151               	movlb	17	; select bank17
  3370  036D  0191               	clrf	17	;volatile
  3371  036E                     l1428:
  3372                           
  3373                           ;mcc_generated_files/mcc.c: 64:     OSCFRQ = 0x02;
  3374  036E  3002               	movlw	2
  3375  036F  0093               	movwf	19	;volatile
  3376  0370                     l1430:
  3377                           
  3378                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3379  0370  0192               	clrf	18	;volatile
  3380  0371                     l554:
  3381  0371  0008               	return
  3382  0372                     __end_of_OSCILLATOR_Initialize:
  3383                           
  3384                           	psect	text10
  3385  037E                     __ptext10:	
  3386 ;; *************** function _I2C1_Initialize *****************
  3387 ;; Defined at:
  3388 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3402 ;;      Params:         0       0       0       0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_SYSTEM_Initialize
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _I2C1_Initialize
  3417  037E                     _I2C1_Initialize:
  3418  037E                     l1396:	
  3419                           ;incstack = 0
  3420                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  3421                           
  3422                           
  3423                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
  3424  037E  0143               	movlb	3	; select bank3
  3425  037F  018F               	clrf	15	;volatile
  3426  0380                     l1398:
  3427                           
  3428                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  3429  0380  3008               	movlw	8
  3430  0381  0090               	movwf	16	;volatile
  3431  0382                     l1400:
  3432                           
  3433                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  3434  0382  0191               	clrf	17	;volatile
  3435                           
  3436                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x09;
  3437  0383  3009               	movlw	9
  3438  0384  008D               	movwf	13	;volatile
  3439  0385                     l1402:
  3440                           
  3441                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  3442  0385  1290               	bcf	16,5	;volatile
  3443  0386                     l302:
  3444  0386  0008               	return
  3445  0387                     __end_of_I2C1_Initialize:
  3446                           
  3447                           	psect	text11
  3448  04BE                     __ptext11:	
  3449 ;; *************** function _LCD_Init *****************
  3450 ;; Defined at:
  3451 ;;		line 80 in file "I2C_LCD.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  I2C_Add         1    wreg     unsigned char 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  I2C_Add         1    7[COMMON] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0, pclath, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3465 ;;      Params:         0       0       0       0       0       0       0       0
  3466 ;;      Locals:         1       0       0       0       0       0       0       0
  3467 ;;      Temps:          1       0       0       0       0       0       0       0
  3468 ;;      Totals:         2       0       0       0       0       0       0       0
  3469 ;;Total ram usage:        2 bytes
  3470 ;; Hardware stack levels used: 1
  3471 ;; Hardware stack levels required when called: 5
  3472 ;; This function calls:
  3473 ;;		_IO_Expander_Write
  3474 ;;		_LCD_CMD
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           
  3481                           ;psect for function _LCD_Init
  3482  04BE                     _LCD_Init:
  3483                           
  3484                           ;incstack = 0
  3485                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3486                           ;LCD_Init@I2C_Add stored from wreg
  3487  04BE  00F7               	movwf	LCD_Init@I2C_Add
  3488  04BF                     l2742:
  3489                           
  3490                           ;I2C_LCD.c: 80: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 81: {;I2C_LCD.c: 82:   i
      +                          2c_add = I2C_Add;
  3491  04BF  0877               	movf	LCD_Init@I2C_Add,w
  3492  04C0  00F6               	movwf	??_LCD_Init
  3493  04C1  0876               	movf	??_LCD_Init,w
  3494  04C2  00FB               	movwf	_i2c_add
  3495  04C3                     l2744:
  3496                           
  3497                           ;I2C_LCD.c: 83:   IO_Expander_Write(0x00);
  3498  04C3  3000               	movlw	0
  3499  04C4  3183  23C2  3184   	fcall	_IO_Expander_Write
  3500  04C7                     l2746:
  3501                           
  3502                           ;I2C_LCD.c: 84:   _delay((unsigned long)((30)*(4000000/4000.0)));
  3503  04C7  3027               	movlw	39
  3504  04C8  00F6               	movwf	??_LCD_Init
  3505  04C9  30F5               	movlw	245
  3506  04CA                     u1057:
  3507  04CA  0B89               	decfsz	9,f
  3508  04CB  2CCA               	goto	u1057
  3509  04CC  0BF6               	decfsz	??_LCD_Init,f
  3510  04CD  2CCA               	goto	u1057
  3511  04CE  0000               	nop
  3512                           
  3513                           ;I2C_LCD.c: 85:   LCD_CMD(0x03);
  3514  04CF  3003               	movlw	3
  3515  04D0  3183  23E7  3184   	fcall	_LCD_CMD
  3516  04D3                     l2748:
  3517                           
  3518                           ;I2C_LCD.c: 86:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3519  04D3  3007               	movlw	7
  3520  04D4  00F6               	movwf	??_LCD_Init
  3521  04D5  307D               	movlw	125
  3522  04D6                     u1067:
  3523  04D6  0B89               	decfsz	9,f
  3524  04D7  2CD6               	goto	u1067
  3525  04D8  0BF6               	decfsz	??_LCD_Init,f
  3526  04D9  2CD6               	goto	u1067
  3527  04DA  0000               	nop
  3528  04DB                     l2750:
  3529                           
  3530                           ;I2C_LCD.c: 87:   LCD_CMD(0x03);
  3531  04DB  3003               	movlw	3
  3532  04DC  3183  23E7  3184   	fcall	_LCD_CMD
  3533                           
  3534                           ;I2C_LCD.c: 88:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3535  04DF  3007               	movlw	7
  3536  04E0  00F6               	movwf	??_LCD_Init
  3537  04E1  307D               	movlw	125
  3538  04E2                     u1077:
  3539  04E2  0B89               	decfsz	9,f
  3540  04E3  2CE2               	goto	u1077
  3541  04E4  0BF6               	decfsz	??_LCD_Init,f
  3542  04E5  2CE2               	goto	u1077
  3543  04E6  0000               	nop
  3544  04E7                     l2752:
  3545                           
  3546                           ;I2C_LCD.c: 89:   LCD_CMD(0x03);
  3547  04E7  3003               	movlw	3
  3548  04E8  3183  23E7  3184   	fcall	_LCD_CMD
  3549  04EB                     l2754:
  3550                           
  3551                           ;I2C_LCD.c: 90:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3552  04EB  3007               	movlw	7
  3553  04EC  00F6               	movwf	??_LCD_Init
  3554  04ED  307D               	movlw	125
  3555  04EE                     u1087:
  3556  04EE  0B89               	decfsz	9,f
  3557  04EF  2CEE               	goto	u1087
  3558  04F0  0BF6               	decfsz	??_LCD_Init,f
  3559  04F1  2CEE               	goto	u1087
  3560  04F2  0000               	nop
  3561                           
  3562                           ;I2C_LCD.c: 91:   LCD_CMD(0x02);
  3563  04F3  3002               	movlw	2
  3564  04F4  3183  23E7  3184   	fcall	_LCD_CMD
  3565  04F7                     l2756:
  3566                           
  3567                           ;I2C_LCD.c: 92:   _delay((unsigned long)((5)*(4000000/4000.0)));
  3568  04F7  3007               	movlw	7
  3569  04F8  00F6               	movwf	??_LCD_Init
  3570  04F9  307D               	movlw	125
  3571  04FA                     u1097:
  3572  04FA  0B89               	decfsz	9,f
  3573  04FB  2CFA               	goto	u1097
  3574  04FC  0BF6               	decfsz	??_LCD_Init,f
  3575  04FD  2CFA               	goto	u1097
  3576  04FE  0000               	nop
  3577  04FF                     l2758:
  3578                           
  3579                           ;I2C_LCD.c: 93:   LCD_CMD(0x20 | (2 << 2));
  3580  04FF  3028               	movlw	40
  3581  0500  3183  23E7  3184   	fcall	_LCD_CMD
  3582                           
  3583                           ;I2C_LCD.c: 94:   _delay((unsigned long)((50)*(4000000/4000.0)));
  3584  0503  3041               	movlw	65
  3585  0504  00F6               	movwf	??_LCD_Init
  3586  0505  30EE               	movlw	238
  3587  0506                     u1107:
  3588  0506  0B89               	decfsz	9,f
  3589  0507  2D06               	goto	u1107
  3590  0508  0BF6               	decfsz	??_LCD_Init,f
  3591  0509  2D06               	goto	u1107
  3592  050A  3200               	nop2
  3593  050B                     l2760:
  3594                           
  3595                           ;I2C_LCD.c: 95:   LCD_CMD(0x0C);
  3596  050B  300C               	movlw	12
  3597  050C  3183  23E7  3184   	fcall	_LCD_CMD
  3598  050F                     l2762:
  3599                           
  3600                           ;I2C_LCD.c: 96:   _delay((unsigned long)((50)*(4000000/4000.0)));
  3601  050F  3041               	movlw	65
  3602  0510  00F6               	movwf	??_LCD_Init
  3603  0511  30EE               	movlw	238
  3604  0512                     u1117:
  3605  0512  0B89               	decfsz	9,f
  3606  0513  2D12               	goto	u1117
  3607  0514  0BF6               	decfsz	??_LCD_Init,f
  3608  0515  2D12               	goto	u1117
  3609  0516  3200               	nop2
  3610                           
  3611                           ;I2C_LCD.c: 97:   LCD_CMD(0x01);
  3612  0517  3001               	movlw	1
  3613  0518  3183  23E7  3184   	fcall	_LCD_CMD
  3614  051B                     l2764:
  3615                           
  3616                           ;I2C_LCD.c: 98:   _delay((unsigned long)((50)*(4000000/4000.0)));
  3617  051B  3041               	movlw	65
  3618  051C  00F6               	movwf	??_LCD_Init
  3619  051D  30EE               	movlw	238
  3620  051E                     u1127:
  3621  051E  0B89               	decfsz	9,f
  3622  051F  2D1E               	goto	u1127
  3623  0520  0BF6               	decfsz	??_LCD_Init,f
  3624  0521  2D1E               	goto	u1127
  3625  0522  3200               	nop2
  3626  0523                     l2766:
  3627                           
  3628                           ;I2C_LCD.c: 99:   LCD_CMD(0x04 | 0x02);
  3629  0523  3006               	movlw	6
  3630  0524  3183  23E7  3184   	fcall	_LCD_CMD
  3631                           
  3632                           ;I2C_LCD.c: 100:   _delay((unsigned long)((50)*(4000000/4000.0)));
  3633  0527  3041               	movlw	65
  3634  0528  00F6               	movwf	??_LCD_Init
  3635  0529  30EE               	movlw	238
  3636  052A                     u1137:
  3637  052A  0B89               	decfsz	9,f
  3638  052B  2D2A               	goto	u1137
  3639  052C  0BF6               	decfsz	??_LCD_Init,f
  3640  052D  2D2A               	goto	u1137
  3641  052E  3200               	nop2
  3642  052F                     l780:
  3643  052F  0008               	return
  3644  0530                     __end_of_LCD_Init:
  3645                           
  3646                           	psect	text12
  3647  03E7                     __ptext12:	
  3648 ;; *************** function _LCD_CMD *****************
  3649 ;; Defined at:
  3650 ;;		line 120 in file "I2C_LCD.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  CMD             1    wreg     unsigned char 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  CMD             1    5[COMMON] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0, pclath, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3664 ;;      Params:         0       0       0       0       0       0       0       0
  3665 ;;      Locals:         1       0       0       0       0       0       0       0
  3666 ;;      Temps:          1       0       0       0       0       0       0       0
  3667 ;;      Totals:         2       0       0       0       0       0       0       0
  3668 ;;Total ram usage:        2 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 4
  3671 ;; This function calls:
  3672 ;;		_LCD_Write_4Bit
  3673 ;; This function is called by:
  3674 ;;		_LCD_Init
  3675 ;;		_LCD_Set_Cursor
  3676 ;;		_LCD_Clear
  3677 ;;		_LCD_SL
  3678 ;;		_LCD_SR
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _LCD_CMD
  3684  03E7                     _LCD_CMD:
  3685                           
  3686                           ;incstack = 0
  3687                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3688                           ;LCD_CMD@CMD stored from wreg
  3689  03E7  00F5               	movwf	LCD_CMD@CMD
  3690  03E8                     l2494:
  3691                           
  3692                           ;I2C_LCD.c: 120: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 121: {;I2C_LCD.c: 122:   RS 
      +                          = 0;
  3693  03E8  01FC               	clrf	_RS
  3694  03E9                     l2496:
  3695                           
  3696                           ;I2C_LCD.c: 123:   LCD_Write_4Bit(CMD & 0xF0);
  3697  03E9  0875               	movf	LCD_CMD@CMD,w
  3698  03EA  39F0               	andlw	240
  3699  03EB  3183  23D3  3183   	fcall	_LCD_Write_4Bit
  3700  03EE                     l2498:
  3701                           
  3702                           ;I2C_LCD.c: 124:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  3703  03EE  0875               	movf	LCD_CMD@CMD,w
  3704  03EF  00F4               	movwf	??_LCD_CMD
  3705  03F0  3003               	movlw	3
  3706  03F1                     u735:
  3707  03F1  35F4               	lslf	??_LCD_CMD,f
  3708  03F2  3EFF               	addlw	-1
  3709  03F3  1D03               	skipz
  3710  03F4  2BF1               	goto	u735
  3711  03F5  3574               	lslf	??_LCD_CMD,w
  3712  03F6  39F0               	andlw	240
  3713  03F7  3183  23D3  3183   	fcall	_LCD_Write_4Bit
  3714  03FA                     l789:
  3715  03FA  0008               	return
  3716  03FB                     __end_of_LCD_CMD:
  3717                           
  3718                           	psect	text13
  3719  03D3                     __ptext13:	
  3720 ;; *************** function _LCD_Write_4Bit *****************
  3721 ;; Defined at:
  3722 ;;		line 111 in file "I2C_LCD.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  Nibble          1    wreg     unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  Nibble          1    3[COMMON] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3736 ;;      Params:         0       0       0       0       0       0       0       0
  3737 ;;      Locals:         1       0       0       0       0       0       0       0
  3738 ;;      Temps:          1       0       0       0       0       0       0       0
  3739 ;;      Totals:         2       0       0       0       0       0       0       0
  3740 ;;Total ram usage:        2 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 3
  3743 ;; This function calls:
  3744 ;;		_IO_Expander_Write
  3745 ;; This function is called by:
  3746 ;;		_LCD_CMD
  3747 ;;		_LCD_Write_Char
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function _LCD_Write_4Bit
  3753  03D3                     _LCD_Write_4Bit:
  3754                           
  3755                           ;incstack = 0
  3756                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  3757                           ;LCD_Write_4Bit@Nibble stored from wreg
  3758  03D3  00F3               	movwf	LCD_Write_4Bit@Nibble
  3759  03D4                     l2488:
  3760                           
  3761                           ;I2C_LCD.c: 111: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 112: {;I2C_LCD.c: 
      +                          114:   Nibble |= RS;
  3762  03D4  087C               	movf	_RS,w
  3763  03D5  00F2               	movwf	??_LCD_Write_4Bit
  3764  03D6  0872               	movf	??_LCD_Write_4Bit,w
  3765  03D7  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  3766  03D8                     l2490:
  3767                           
  3768                           ;I2C_LCD.c: 115:   IO_Expander_Write(Nibble | 0x04);
  3769  03D8  0873               	movf	LCD_Write_4Bit@Nibble,w
  3770  03D9  3804               	iorlw	4
  3771  03DA  3183  23C2  3183   	fcall	_IO_Expander_Write
  3772  03DD                     l2492:
  3773                           
  3774                           ;I2C_LCD.c: 116:   IO_Expander_Write(Nibble & 0xFB);
  3775  03DD  0873               	movf	LCD_Write_4Bit@Nibble,w
  3776  03DE  39FB               	andlw	251
  3777  03DF  3183  23C2  3183   	fcall	_IO_Expander_Write
  3778                           
  3779                           ;I2C_LCD.c: 117:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3780  03E2  3010               	movlw	16
  3781  03E3                     u1147:
  3782  03E3  0B89               	decfsz	9,f
  3783  03E4  2BE3               	goto	u1147
  3784  03E5  3200               	nop2
  3785  03E6                     l786:
  3786  03E6  0008               	return
  3787  03E7                     __end_of_LCD_Write_4Bit:
  3788                           
  3789                           	psect	text14
  3790  03C2                     __ptext14:	
  3791 ;; *************** function _IO_Expander_Write *****************
  3792 ;; Defined at:
  3793 ;;		line 103 in file "I2C_LCD.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  Data            1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  Data            1    1[COMMON] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, pclath, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3807 ;;      Params:         0       0       0       0       0       0       0       0
  3808 ;;      Locals:         1       0       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0
  3810 ;;      Totals:         1       0       0       0       0       0       0       0
  3811 ;;Total ram usage:        1 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 2
  3814 ;; This function calls:
  3815 ;;		_I2C_Master_Start
  3816 ;;		_I2C_Master_Stop
  3817 ;;		_I2C_Master_Write
  3818 ;; This function is called by:
  3819 ;;		_LCD_Init
  3820 ;;		_LCD_Write_4Bit
  3821 ;;		_Backlight
  3822 ;;		_noBacklight
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function _IO_Expander_Write
  3828  03C2                     _IO_Expander_Write:
  3829                           
  3830                           ;incstack = 0
  3831                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  3832                           ;IO_Expander_Write@Data stored from wreg
  3833  03C2  00F1               	movwf	IO_Expander_Write@Data
  3834  03C3                     l2486:
  3835                           
  3836                           ;I2C_LCD.c: 103: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 104: {;I2C_LCD.c:
      +                           105:   I2C_Master_Start();
  3837  03C3  3183  2360  3183   	fcall	_I2C_Master_Start
  3838                           
  3839                           ;I2C_LCD.c: 106:   I2C_Master_Write(i2c_add);
  3840  03C6  087B               	movf	_i2c_add,w
  3841  03C7  3183  23B4  3183   	fcall	_I2C_Master_Write
  3842                           
  3843                           ;I2C_LCD.c: 107:   I2C_Master_Write(Data | BackLight_State);
  3844  03CA  0871               	movf	IO_Expander_Write@Data,w
  3845  03CB  047D               	iorwf	_BackLight_State,w
  3846  03CC  3183  23B4  3183   	fcall	_I2C_Master_Write
  3847                           
  3848                           ;I2C_LCD.c: 108:   I2C_Master_Stop();
  3849  03CF  3183  2366  3183   	fcall	_I2C_Master_Stop
  3850  03D2                     l783:
  3851  03D2  0008               	return
  3852  03D3                     __end_of_IO_Expander_Write:
  3853                           
  3854                           	psect	text15
  3855  03B4                     __ptext15:	
  3856 ;; *************** function _I2C_Master_Write *****************
  3857 ;; Defined at:
  3858 ;;		line 56 in file "I2C_LCD.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  data            1    wreg     unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  data            1    0[COMMON] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      unsigned char 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, pclath, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3872 ;;      Params:         0       0       0       0       0       0       0       0
  3873 ;;      Locals:         1       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0
  3875 ;;      Totals:         1       0       0       0       0       0       0       0
  3876 ;;Total ram usage:        1 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 1
  3879 ;; This function calls:
  3880 ;;		_I2C_Master_Wait
  3881 ;; This function is called by:
  3882 ;;		_IO_Expander_Write
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           
  3887                           ;psect for function _I2C_Master_Write
  3888  03B4                     _I2C_Master_Write:
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3892                           ;I2C_Master_Write@data stored from wreg
  3893  03B4  00F0               	movwf	I2C_Master_Write@data
  3894  03B5                     l2482:
  3895                           
  3896                           ;I2C_LCD.c: 56: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 57: {;I2C_
      +                          LCD.c: 58:     I2C_Master_Wait();
  3897  03B5  3183  239B  3183   	fcall	_I2C_Master_Wait
  3898  03B8                     l2484:
  3899                           
  3900                           ;I2C_LCD.c: 59:     SSP1BUF = data;
  3901  03B8  0870               	movf	I2C_Master_Write@data,w
  3902  03B9  0143               	movlb	3	; select bank3
  3903  03BA  008C               	movwf	12	;volatile
  3904  03BB                     l768:	
  3905                           ;I2C_LCD.c: 60:     while(!SSP1IF);
  3906                           
  3907  03BB  014E               	movlb	14	; select bank14
  3908  03BC  1C8D               	btfss	13,1	;volatile
  3909  03BD  2BBF               	goto	u721
  3910  03BE  2BC0               	goto	u720
  3911  03BF                     u721:
  3912  03BF  2BBB               	goto	l768
  3913  03C0                     u720:
  3914  03C0                     l770:
  3915                           
  3916                           ;I2C_LCD.c: 61:  SSP1IF = 0;
  3917  03C0  108D               	bcf	13,1	;volatile
  3918  03C1                     l771:	
  3919                           ;I2C_LCD.c: 62:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  3920                           
  3921  03C1  0008               	return
  3922  03C2                     __end_of_I2C_Master_Write:
  3923                           
  3924                           	psect	text16
  3925  0366                     __ptext16:	
  3926 ;; *************** function _I2C_Master_Stop *****************
  3927 ;; Defined at:
  3928 ;;		line 36 in file "I2C_LCD.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3942 ;;      Params:         0       0       0       0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 1
  3949 ;; This function calls:
  3950 ;;		_I2C_Master_Wait
  3951 ;; This function is called by:
  3952 ;;		_IO_Expander_Write
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _I2C_Master_Stop
  3958  0366                     _I2C_Master_Stop:
  3959  0366                     l2478:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3962                           
  3963                           
  3964                           ;I2C_LCD.c: 38:     I2C_Master_Wait();
  3965  0366  3183  239B  3183   	fcall	_I2C_Master_Wait
  3966  0369                     l2480:
  3967                           
  3968                           ;I2C_LCD.c: 39:     PEN = 1;
  3969  0369  0143               	movlb	3	; select bank3
  3970  036A  1511               	bsf	17,2	;volatile
  3971  036B                     l759:
  3972  036B  0008               	return
  3973  036C                     __end_of_I2C_Master_Stop:
  3974                           
  3975                           	psect	text17
  3976  0360                     __ptext17:	
  3977 ;; *************** function _I2C_Master_Start *****************
  3978 ;; Defined at:
  3979 ;;		line 24 in file "I2C_LCD.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3993 ;;      Params:         0       0       0       0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 1
  4000 ;; This function calls:
  4001 ;;		_I2C_Master_Wait
  4002 ;; This function is called by:
  4003 ;;		_IO_Expander_Write
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function _I2C_Master_Start
  4009  0360                     _I2C_Master_Start:
  4010  0360                     l2474:	
  4011                           ;incstack = 0
  4012                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4013                           
  4014                           
  4015                           ;I2C_LCD.c: 26:     I2C_Master_Wait();
  4016  0360  3183  239B  3183   	fcall	_I2C_Master_Wait
  4017  0363                     l2476:
  4018                           
  4019                           ;I2C_LCD.c: 27:     SEN1 = 1;
  4020  0363  0143               	movlb	3	; select bank3
  4021  0364  1411               	bsf	17,0	;volatile
  4022  0365                     l753:
  4023  0365  0008               	return
  4024  0366                     __end_of_I2C_Master_Start:
  4025                           
  4026                           	psect	text18
  4027  039B                     __ptext18:	
  4028 ;; *************** function _I2C_Master_Wait *****************
  4029 ;; Defined at:
  4030 ;;		line 19 in file "I2C_LCD.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4044 ;;      Params:         0       0       0       0       0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0
  4047 ;;      Totals:         0       0       0       0       0       0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_I2C_Master_Start
  4054 ;;		_I2C_Master_Stop
  4055 ;;		_I2C_Master_Write
  4056 ;;		_I2C_Master_RepeatedStart
  4057 ;;		_I2C_ACK
  4058 ;;		_I2C_NACK
  4059 ;;		_I2C_Read_Byte
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _I2C_Master_Wait
  4065  039B                     _I2C_Master_Wait:
  4066  039B                     l2470:	
  4067                           ;incstack = 0
  4068                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4069                           
  4070  039B                     l747:	
  4071                           ;I2C_LCD.c: 21:     while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  4072                           
  4073  039B  0143               	movlb	3	; select bank3
  4074  039C  190F               	btfsc	15,2	;volatile
  4075  039D  2B9F               	goto	u701
  4076  039E  2BA0               	goto	u700
  4077  039F                     u701:
  4078  039F  2B9B               	goto	l747
  4079  03A0                     u700:
  4080  03A0                     l2472:
  4081  03A0  0811               	movf	17,w	;volatile
  4082  03A1  391F               	andlw	31
  4083  03A2  1D03               	btfss	3,2
  4084  03A3  2BA5               	goto	u711
  4085  03A4  2BA6               	goto	u710
  4086  03A5                     u711:
  4087  03A5  2B9B               	goto	l747
  4088  03A6                     u710:
  4089  03A6                     l750:
  4090  03A6  0008               	return
  4091  03A7                     __end_of_I2C_Master_Wait:
  4092                           
  4093                           	psect	text19
  4094  0390                     __ptext19:	
  4095 ;; *************** function _I2C_Master_Init *****************
  4096 ;; Defined at:
  4097 ;;		line 9 in file "I2C_LCD.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4111 ;;      Params:         0       0       0       0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0       0
  4114 ;;      Totals:         0       0       0       0       0       0       0       0
  4115 ;;Total ram usage:        0 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _I2C_Master_Init
  4126  0390                     _I2C_Master_Init:
  4127  0390                     l1782:	
  4128                           ;incstack = 0
  4129                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  4130                           
  4131                           
  4132                           ;I2C_LCD.c: 11:   SSP1CON1 = 0x28;
  4133  0390  3028               	movlw	40
  4134  0391  0143               	movlb	3	; select bank3
  4135  0392  0090               	movwf	16	;volatile
  4136  0393                     l1784:
  4137                           
  4138                           ;I2C_LCD.c: 12:   SSP1CON2 = 0x00;
  4139  0393  0191               	clrf	17	;volatile
  4140  0394                     l1786:
  4141                           
  4142                           ;I2C_LCD.c: 13:   SSP1STAT = 0x00;
  4143  0394  018F               	clrf	15	;volatile
  4144                           
  4145                           ;I2C_LCD.c: 14:   SSP1ADD = ((4000000/4)/100000) - 1;
  4146  0395  3009               	movlw	9
  4147  0396  008D               	movwf	13	;volatile
  4148  0397                     l1788:
  4149                           
  4150                           ;I2C_LCD.c: 15:   TRISB6 = 1;
  4151  0397  0140               	movlb	0	; select bank0
  4152  0398  1713               	bsf	19,6	;volatile
  4153  0399                     l1790:
  4154                           
  4155                           ;I2C_LCD.c: 16:   TRISB4 = 1;
  4156  0399  1613               	bsf	19,4	;volatile
  4157  039A                     l744:
  4158  039A  0008               	return
  4159  039B                     __end_of_I2C_Master_Init:
  4160  007E                     btemp	set	126	;btemp
  4161  007E                     wtemp0	set	126
  4162                           
  4163                           	psect	config
  4164                           
  4165                           ;Config register CONFIG1 @ 0x8007
  4166                           ;	External Oscillator Mode Selection bits
  4167                           ;	FEXTOSC = OFF, Oscillator not enabled
  4168                           ;	Power-up Default Value for COSC bits
  4169                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  4170                           ;	Clock Out Enable bit
  4171                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  4172                           ;	VDD Range Analog Calibration Selection bit
  4173                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  4174  8007                     	org	32775
  4175  8007  3FED               	dw	16365
  4176                           
  4177                           ;Config register CONFIG2 @ 0x8008
  4178                           ;	Master Clear Enable bit
  4179                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4180                           ;	Power-up Timer Selection bits
  4181                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4182                           ;	WDT Operating Mode bits
  4183                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  4184                           ;	Brown-out Reset Enable bits
  4185                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4186                           ;	Brown-out Reset Voltage Selection bit
  4187                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4188                           ;	PPSLOCKED One-Way Set Enable bit
  4189                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  4190                           ;	Stack Overflow/Underflow Reset Enable bit
  4191                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4192  8008                     	org	32776
  4193  8008  3FE7               	dw	16359
  4194                           
  4195                           ;Config register CONFIG4 @ 0x800A
  4196                           ;	Boot Block Size Selection bits
  4197                           ;	BBSIZE = BB512, 512 words boot block size
  4198                           ;	Boot Block Enable bit
  4199                           ;	BBEN = OFF, Boot Block is disabled
  4200                           ;	SAF Enable bit
  4201                           ;	SAFEN = OFF, SAF is disabled
  4202                           ;	Application Block Write Protection bit
  4203                           ;	WRTAPP = OFF, Application Block is not write-protected
  4204                           ;	Boot Block Write Protection bit
  4205                           ;	WRTB = OFF, Boot Block is not write-protected
  4206                           ;	Configuration Registers Write Protection bit
  4207                           ;	WRTC = OFF, Configuration Registers are not write-protected
  4208                           ;	Storage Area Flash (SAF) Write Protection bit
  4209                           ;	WRTSAF = OFF, SAF is not write-protected
  4210                           ;	Low Voltage Programming Enable bit
  4211                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  4212  800A                     	org	32778
  4213  800A  3FFF               	dw	16383
  4214                           
  4215                           ;Config register CONFIG5 @ 0x800B
  4216                           ;	User Program Flash Memory Code Protection bit
  4217                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4218  800B                     	org	32779
  4219  800B  3FFF               	dw	16383

Data Sizes:
    Strings     100
    Constant    32
    Data        21
    BSS         38
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      8      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$1858$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S325$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 21
		 -> STR_44(CODE[10]), STR_43(CODE[10]), STR_42(CODE[21]), STR_37(CODE[16]), 
		 -> STR_36(CODE[11]), STR_31(CODE[14]), STR_27(CODE[8]), STR_26(CODE[10]), 
		 -> STR_25(CODE[21]), STR_20(CODE[16]), STR_19(CODE[12]), STR_14(CODE[14]), 

    combinacion	PTR unsigned char [5] size(2) Largest target is 2
		 -> STR_41(CODE[2]), STR_40(CODE[2]), STR_39(CODE[2]), STR_38(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_30(CODE[2]), STR_29(CODE[2]), STR_28(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 

    Contrasena	PTR unsigned char [5] size(2) Largest target is 2
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    S325$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S325$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S325$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F166(), wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F166(), wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E3918[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F177@ptr.data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    d.data	PTR unsigned char  size(1) Largest target is 0

    S74$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _contra->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_contra

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5092
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                  _SYSTEM_Initialize
                             _contra
 ---------------------------------------------------------------------------------
 (1) _contra                                               8     8      0    2603
                                              0 BANK0      8     8      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     5     3      2    1135
                                              6 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1    1155
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     133
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     199
                                              6 COMMON     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      44
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _contra
     _LCD_Clear
       _LCD_CMD
     _LCD_Set_Cursor
     _LCD_Write_String

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      41       6       81.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      4F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 25 10:03:24 2021

                                              _RS 007C                                               l302 0386  
                                             l610 04BD                                               l551 03B3  
                                             l554 0371                                               l557 035F  
                                             l750 03A6                                               l822 038F  
                                             l807 048D                                               l647 0531  
                                             l744 039A                                               l753 0365  
                                             l770 03C0                                               l666 067A  
                                             l747 039B                                               l771 03C1  
                                             l780 052F                                               l759 036B  
                                             l783 03D2                                               l768 03BB  
                                             l792 0423                                               l689 07E3  
                                             l786 03E6                                               l789 03FA  
                                             l798 0440                                               _PEN 0C8A  
                                             u700 03A0                                               u701 039F  
                                             u710 03A6                                               u711 03A5  
                                             u720 03C0                                               u800 05B6  
                                             u721 03BF                                               u801 05B5  
                                             u810 05CF                                               u811 05CE  
                                             u900 072B                                               u820 05D7  
                                             u901 072A                                               u821 05D6  
                                             u805 05B2                                               u750 0440  
                                             u910 0733                                               u830 0659  
                                             u735 03F1                                               u751 043F  
                                             u911 0732                                               u831 0658  
                                             u815 05CB                                               u920 07B1  
                                             u840 067E                                               u760 0535  
                                             u745 041A                                               u921 07B0  
                                             u905 0727                                               u841 067D  
                                             u761 0534                                               u850 0691  
                                             u770 0553                                               u851 0690  
                                             u771 0552                                               u860 06AF  
                                             u780 0571                                               u861 06AE  
                                             u781 0570                                               u870 06CD  
                                             u790 0592                                               u871 06CC  
                                             u791 0591                                               u880 06EE  
                                             u881 06ED                                               u890 0712  
                                             u891 0711                                               u947 053B  
                                             u957 0559                                               u895 070E  
                                             u967 0577                                               u977 05FB  
                                             u987 0647                                               u997 0697  
                                             wreg 0009                              _I2C1_DO_RX_NACK_STOP 0000  
                                 __end_of_LCD_CMD 03FB                               LCD_Write_String@Str 0076  
                                  _LCD_Set_Cursor 0460                                              l1400 0382  
                                            l1402 0385                                              l1410 0496  
                                            l1420 04A3                                              l1412 0498  
                                            l1404 048E                                              l1430 0370  
                                            l1422 04A4                                              l1414 049B  
                                            l1406 0492                                              l1424 04A5  
                                            l1416 049D                                              l1408 0494  
                                            l1432 035D                                              l1426 036C  
                                            l1418 04A1                                              l1428 036E  
                                            l2500 0410                                              l2510 046E  
                                            l2502 0412                                              l2512 0474  
                                            l2504 0461                                              l2520 0424  
                                            l2600 0617                                              l1570 03B0  
                                            l2530 038B                                              l2506 0462  
                                            l2514 047A                                              l2522 0427  
                                            l2610 0637                                              l2602 061D  
                                            l1396 037E                                              l2508 0468  
                                            l2524 0431                                              l2700 0767  
                                            l2620 0651                                              l2612 063B  
                                            l2604 062A                                              l2540 054F  
                                            l2532 0530                                              l2470 039B  
                                            l1398 0380                                              l2526 0435  
                                            l2710 0787                                              l2702 076D  
                                            l2630 067E                                              l2622 0659  
                                            l2614 063F                                              l2606 062F  
                                            l2550 0571                                              l2542 0553  
                                            l2534 0535                                              l2472 03A0  
                                            l2480 0369                                              l1568 03A7  
                                            l2528 0387                                              l2720 0799  
                                            l2712 078B                                              l2640 06A7  
                                            l2632 068B                                              l2624 0666  
                                            l2616 0641                                              l2608 0633  
                                            l2560 0594                                              l2552 057E  
                                            l2544 0560                                              l2536 0542  
                                            l2474 0360                                              l2482 03B5  
                                            l2490 03D8                                              l2730 07C1  
                                            l2722 07A6                                              l2714 078F  
                                            l2706 0775                                              l2650 06C9  
                                            l2642 06AB                                              l2634 068D  
                                            l2626 0669                                              l2618 064E  
                                            l2570 05B6                                              l2562 0599  
                                            l2554 0587                                              l2546 0569  
                                            l2538 054B                                              l2476 0363  
                                            l2484 03B8                                              l2492 03DD  
                                            l2724 07A9                                              l2716 0793  
                                            l2708 0782                                              l2660 06EE  
                                            l2652 06CD                                              l2644 06AF  
                                            l2636 0691                                              l2628 0676  
                                            l2580 05E4                                              l2572 05BB  
                                            l2556 058B                                              l2548 056D  
                                            l1790 0399                                              l1782 0390  
                                            l2478 0366                                              l2486 03C3  
                                            l2494 03E8                                              l2750 04DB  
                                            l2742 04BF                                              l2726 07B1  
                                            l2718 0797                                              l2670 06F7  
                                            l2662 06F0                                              l2654 06DA  
                                            l2646 06BC                                              l2638 069E  
                                            l2590 0602                                              l2582 05E9  
                                            l2574 05BE                                              l2558 0592  
                                            l1784 0393                                              l2488 03D4  
                                            l2496 03E9                                              l2760 050B  
                                            l2752 04E7                                              l2744 04C3  
                                            l2728 07BE                                              l2680 0733  
                                            l2672 0712                                              l2664 06F5  
                                            l2656 06E3                                              l2648 06C5  
                                            l2592 0605                                              l2584 05ED  
                                            l2576 05CF                                              l2568 059B  
                                            l2736 07CF                                              l1786 0394  
                                            l2498 03EE                                              l2762 050F  
                                            l2754 04EB                                              l2746 04C7  
                                            l2690 0751                                              l2682 0740  
                                            l2674 0717                                              l2658 06E7  
                                            l2594 0608                                              l2586 05F1  
                                            l2578 05D7                                              l2770 044B  
                                            l1788 0397                                              l2764 051B  
                                            l2756 04F7                                              l2748 04D3  
                                            l2860 07D5                                              l2692 0752  
                                            l2684 0745                                              l2676 071A  
                                            l2596 060A                                              l2588 05F5  
                                            l2772 0451                                              l2766 0523  
                                            l2758 04FF                                              l2862 0482  
                                            l2694 075F                                              l2686 0749  
                                            l2678 072B                                              l2598 0610  
                                            l2774 0458                                              l2696 0762  
                                            l2688 074D                                              l2776 045A  
                                            l2768 0441                                              l2698 0765  
                                            STR_1 087E                                              STR_2 0880  
                                            STR_3 0882                                              STR_4 0880  
                                            STR_5 087E                                              STR_6 087C  
                                            STR_7 087C                                              STR_8 087C  
                                            STR_9 087C                                              u1007 06B5  
                                            u1017 06D3                                              u1107 0506  
                                            u1027 0758                                              u1117 0512  
                                            u1037 079F                                              u1127 051E  
                                            u1047 038C                                              u1137 052A  
                                            u1057 04CA                                              u1147 03E3  
                                            u1067 04D6                                              u1077 04E2  
                                            _LATA 0018                                              _LATB 0019  
                                            u1087 04EE                                              _LATC 001A  
                                            u1097 04FA                                              _RCEN 0C8B  
                                            _SEN1 0C88                                              _RSEN 0C89  
                                            _WPUA 1F39                                              _WPUB 1F44  
                                            _WPUC 1F4F                                 ?_LCD_Write_String 0076  
                                            _main 0441                                __size_of_LCD_Clear 0009  
                                            fsr0h 0005                                              fsr1h 0007  
                                            indf0 0000                                              fsr0l 0004  
                                            fsr1l 0006                                              btemp 007E  
                                            start 0002                                ??_LCD_Write_String 0078  
                            LCD_Write_4Bit@Nibble 0073                                  __end_of_LCD_Init 0530  
                                ?_I2C_Master_Init 0070                                  ?_I2C_Master_Wait 0070  
                                ?_I2C_Master_Stop 0070                    __size_of_OSCILLATOR_Initialize 0006  
                   __end_of_OSCILLATOR_Initialize 0372                                             ?_main 0070  
                                           _ACKEN 0C8C                                             _ACKDT 0C8D  
                                           STR_10 087C                                             STR_11 087E  
                                           STR_12 0880                                             STR_20 0835  
                                           STR_21 087C                                             STR_13 0882  
                                           STR_22 087C                                             STR_30 0882  
                                           STR_14 0845                                             STR_23 087C  
                                           STR_15 087C                                             STR_31 0845  
                                           STR_40 087C                                             STR_32 087C  
                                           STR_24 087C                                             STR_16 087C  
                                           STR_41 087C                                             STR_33 087C  
                                           STR_17 087C                                             STR_25 0820  
                                           STR_34 087C                                             STR_18 087C  
                                           STR_42 0820                                             STR_26 086A  
                                           STR_35 087C                                             STR_43 086A  
                                           STR_27 0874                                             STR_19 0853  
                                           STR_28 087E                                             STR_44 086A  
                                           STR_36 085F                                             STR_29 0880  
                                           STR_37 0835                                             STR_38 087C  
                                           STR_39 087C                        __end_of_i2c1_fsmStateTable 0820  
                                           _OSCEN 0891                                             _TRISA 0012  
                                           _TRISB 0013                                             _TRISC 0014  
                          __end_of_LCD_Set_Cursor 048E                                 ??_I2C1_Initialize 0070  
                                  _WDT_Initialize 035D                                        _Contrasena 004F  
                                           status 0003                                             wtemp0 007E  
                                  _LCD_Write_4Bit 03D3                                    _LCD_Write_Char 040F  
                                 __initialization 07E4                                      __end_of_main 0460  
                               _IO_Expander_Write 03C2                                ?_IO_Expander_Write 0070  
                                          ??_main 007B                                      contra@i_1209 005F  
                               __end_of_LCD_Clear 0390                                         ??_LCD_CMD 0074  
                               ?_I2C_Master_Start 0070                                 ?_I2C_Master_Write 0070  
                          __end_of_WDT_Initialize 0360                               ??_IO_Expander_Write 0071  
                                 ?_LCD_Set_Cursor 0076                                ??_I2C_Master_Start 0070  
                              ??_I2C_Master_Write 0070                                            _ANSELA 1F38  
                                          _ANSELB 1F43                                            _ANSELC 1F4E  
                                          _RB4PPS 1F1C                                            _RB6PPS 1F1E  
                                          _ODCONA 1F3A                                            _ODCONB 1F45  
                                          _ODCONC 1F50                                            _INLVLA 1F3C  
                                          _INLVLB 1F47                                            _INLVLC 1F52  
                                          _OSCFRQ 0893                                            _SSP1IF 3869  
                                          _WDTCON 080C                                            _TRISB4 009C  
                                          _TRISB6 009E                            __end_of_LCD_Write_4Bit 03E7  
                          __end_of_LCD_Write_Char 0424                                  _I2C1_DO_TX_EMPTY 0000  
                                          _Estado 0041                         __end_of_IO_Expander_Write 03D3  
                                          _contra 0530                             _I2C1_DO_SEND_ADR_READ 0000  
                                    __pdataCOMMON 007D                                   ?_WDT_Initialize 0070  
                         _I2C1_DO_RX_NACK_RESTART 0000                                 _SYSTEM_Initialize 03A7  
                         __end_of__initialization 07FD                                         ?_LCD_Init 0070  
                                 ?_LCD_Write_4Bit 0070                                ?_SYSTEM_Initialize 0070  
                                 ?_LCD_Write_Char 0070                           _rdBlkRegCompleteHandler 0000  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 03FB  
                             ??_SYSTEM_Initialize 0070                         __end_of_SYSTEM_Initialize 03B4  
                                      __pbssBANK0 0020                                        ??_LCD_Init 0076  
                                      __pnvCOMMON 007B                             _rd1RegCompleteHandler 0000  
                               _I2C1_DO_SEND_STOP 0000                             _wr1RegCompleteHandler 0000  
                      __size_of_IO_Expander_Write 0011                                        __pmaintext 0441  
                                 _I2C1_Initialize 037E                                           ?_contra 0070  
                                         _ACKSTAT 0C8E                         __size_of_LCD_Write_String 001D  
                                         _LCD_CMD 03E7                                           _OSCTUNE 0892  
                                         _SSP1ADD 018D                                           _SLRCONA 1F3B  
                                         _SLRCONB 1F46                                           _SLRCONC 1F51  
                                         _SSP1BUF 018C                                _i2c1_fsmStateTable 0800  
  _rd1RegCompleteHandler@i2c1_master_example$F143 0000    _wr1RegCompleteHandler@i2c1_master_example$F160 0000  
  _rd2RegCompleteHandler@i2c1_master_example$F154 0000    _wr2RegCompleteHandler@i2c1_master_example$F166 0000  
_rdBlkRegCompleteHandler@i2c1_master_example$F177 0000                                           _i2c_add 007B  
                                 __size_of_contra 02B4                                  ??_LCD_Set_Cursor 0077  
                                         __ptext1 0530                                           __ptext2 0424  
                                         __ptext3 040F                                           __ptext4 0460  
                                         __ptext5 0387                                           __ptext6 03A7  
                                         __ptext7 035D                                           __ptext8 048E  
                                         __ptext9 036C                             _OSCILLATOR_Initialize 036C  
                        ??_PIN_MANAGER_Initialize 0070                          __size_of_I2C_Master_Init 000B  
                        __size_of_I2C_Master_Wait 000C                          __size_of_I2C_Master_Stop 0006  
                                       _LCD_Clear 0387                        __size_of_SYSTEM_Initialize 000D  
                                         clrloop0 0373                                           contra@i 005D  
                            end_of_initialization 07FD                                           init_ram 0378  
                                         initloop 0379                            _I2C1_DO_SEND_ADR_WRITE 0000  
                       __size_of_I2C_Master_Start 0006                         __size_of_I2C_Master_Write 000E  
                         __end_of_I2C1_Initialize 0387                                       _I2C1_Status 0020  
                      _I2C1_DO_SEND_RESTART_WRITE 0000                                  ??_WDT_Initialize 0070  
                                       _PORTCbits 000E                                        LCD_CMD@CMD 0075  
                                      ?_LCD_Clear 0070                                  ??_LCD_Write_4Bit 0072  
                               LCD_Write_String@i 0079                                  ??_LCD_Write_Char 0074  
                               __size_of_LCD_Init 0072                                    _I2C1_DO_RX_ACK 0000  
                                _LCD_Write_String 0424                                     __pidataCOMMON 035C  
                                       _AuxEstado 003D                                    __end_of_contra 07E4  
                          ?_OSCILLATOR_Initialize 0070                               start_initialization 07E4  
                 __size_of_PIN_MANAGER_Initialize 0030                                 ??_I2C_Master_Init 0070  
                               ??_I2C_Master_Wait 0070                                 ??_I2C_Master_Stop 0070  
                                ?_I2C1_Initialize 0070                                       __pdataBANK0 0045  
                                        ??_contra 0059                                          ?_LCD_CMD 0070  
                                     __pbssCOMMON 007C                              _I2C1_DO_SEND_RESTART 0000  
                                       ___latbits 0001                                     __pcstackBANK0 0059  
                                     ??_LCD_Clear 0076                                  _I2C_Master_Start 0360  
                           _rd2RegCompleteHandler 0000                                  _I2C_Master_Write 03B4  
                          _PIN_MANAGER_Initialize 048E                             _wr2RegCompleteHandler 0000  
                           IO_Expander_Write@Data 0071                              I2C_Master_Write@data 0070  
                                        _LCD_Init 04BE                                          _LATCbits 001A  
                                      _I2C1_DO_RX 0000                                        _I2C1_DO_TX 0000  
                                     _combinacion 0045                                         clear_ram0 0372  
                                        _PIE1bits 0717                                          _PIR1bits 070D  
                       _I2C1_DO_SEND_RESTART_READ 0000                                          _SSP1CON1 0190  
                                        _SSP1CON2 0191                                          _SSP1STAT 018F  
                                __size_of_LCD_CMD 0014                                     _I2C1_DO_RESET 0000  
                        __end_of_LCD_Write_String 0441                                          _Auxiliar 0043  
                         ??_OSCILLATOR_Initialize 0070                                   _I2C_Master_Init 0390  
                                 _I2C_Master_Wait 039B                                   _I2C_Master_Stop 0366  
                                        __ptext10 037E                                          __ptext11 04BE  
                                        __ptext12 03E7                                          __ptext13 03D3  
                                        __ptext14 03C2                                          __ptext15 03B4  
                                        __ptext16 0366                                          __ptext17 0360  
                                        __ptext18 039B                                          __ptext19 0390  
                                    _SSP1CON1bits 0190                                      _SSP1CON2bits 0191  
                         __size_of_LCD_Set_Cursor 002E                          _I2C1_CallbackReturnReset 0000  
                                 _BackLight_State 007D                                     __size_of_main 001F  
                                        _intentos 003F                                      _SSP1STATbits 018F  
                                    _I2C1_DO_IDLE 0000                                      _I2C1_DO_RCEN 0000  
                        __end_of_I2C_Master_Start 0366                          __end_of_I2C_Master_Write 03C2  
                              LCD_Write_Char@Data 0075                                    __pstringtext10 087E  
                                  __pstringtext11 0880                                    __pstringtext12 0882  
                                  __pstringtext13 0000                           __size_of_WDT_Initialize 0003  
                         ?_PIN_MANAGER_Initialize 0070                           _I2C1_CallbackReturnStop 0000  
                         __size_of_LCD_Write_4Bit 0014                              _I2C1_DO_ADDRESS_NACK 0000  
                         __size_of_LCD_Write_Char 0015                           __end_of_I2C_Master_Init 039B  
                         __end_of_I2C_Master_Wait 03A7                           __end_of_I2C_Master_Stop 036C  
                                 LCD_Init@I2C_Add 0077                          __size_of_I2C1_Initialize 0009  
                                   __pstringtext1 0800                                     __pstringtext2 0820  
                                   __pstringtext3 0835                                     __pstringtext4 0845  
                                   __pstringtext5 0853                                     __pstringtext6 085F  
                                   __pstringtext7 086A                                     __pstringtext8 0874  
                                   __pstringtext9 087C                                        _SSP1DATPPS 1EC6  
                                      _SSP1CLKPPS 1EC5                                 LCD_Set_Cursor@COL 0076  
                               LCD_Set_Cursor@ROW 0079                    __end_of_PIN_MANAGER_Initialize 04BE  
